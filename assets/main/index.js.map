{"version":3,"sources":["assets/Scripts/character.js","assets/Scripts/continue_button.js","assets/Scripts/gameover.js","assets/Scripts/sound_lib_ts.ts","assets/Scripts/sound_lib.js","assets/Scripts/stage_01.js","assets/Scripts/stage_02.js","assets/Scripts/stage_03.js","assets/Scripts/stage_04.js","assets/Scripts/stage_05.js","assets/Scripts/stage_06.js","assets/Scripts/try_again_button.js","assets/Scripts/tutorial_button.js","assets/migration/use_v2.0.x_cc.Toggle_event.js","assets/Scripts/utils.js","assets/Scripts/win.js"],"names":["cc","Class","extends","Component","properties","moveSpeed","game","default","type","Node","onKeyDown","event","keyCode","macro","KEY","w","this","pressDown","pressLeft","pressRight","pressUp","s","a","d","initChar","dirChangeable","moveUp","moveDown","moveLeft","moveRight","onLoad","boundLeft","node","width","getComponent","outlinePrefab","data","gapX","boundRight","boundBot","height","gapY","boundTop","col","startCell","x","row","y","currentCel","v2","systemEvent","on","SystemEvent","EventType","KEY_DOWN","zIndex","onDestroy","off","checkMovedInCell","currentCelY","currentCelX","checkHitObstacle","obstArray","i","length","checkHitCapturedCell","capturedCell","updateCapturedCell","resetCapturedCell","update","Math","ceil","director","loadScene","winGoal","backgroundNode","find","stage","removePersistRootNode","delta","touch","getDelta","start","stageScene","SceneAsset","_a","_decorator","ccclass","property","NewClass","_super","_this","apply","arguments","audioTestDisplay","seamlessAudioList","fadeAudioList","fps","frameCount","totalVolume","audioList","__extends","prototype","SeamlessAudio","clip","AudioClip","id","startBuffer","endBuffer","getId","setId","value","getStartBuffer","setStartBuffer","getEndBuffer","setEndBuffer","FadeAudio","fadeRate","endVolume","fadeCheckTime","endTime","getFadeRate","setFadeRate","getEndVolume","setEndVolume","getFadeCheckTime","setFadeCheckTime","getEndTime","setEndTime","startTime","Date","getTime","resources","load","err","self","clip_1","clip_2","markerTest","totalLimiter","limiter","volume","threshold","audio","document","createElement","src","nativeUrl","context","AudioContext","source","createMediaElementSource","preGain","createGain","createDynamicsCompressor","knee","ratio","attack","release","connect","destination","newVolume","pow","console","log","setLimiterAuto","orgTotalVolume","audioEngine","getState","getVolume","rate","setVolume","play","loop","push","getFormat","substr","toLowerCase","playSeamlessAudio","seamlessProcess","isLoop","getCurrentTime","getDuration","setCurrentTime","playFadeAudio","startVolume","requiredTime","remainingTime","updateFadeRate","totalFrame","volumeGap","fadeProcess","getFPS","markerToTimeInSec","marker","timeArray","split","hour","min","sec","milSec","parseInt","playAtMarker","getCurrentTimeMarker","currentTime","floor","round","q","stopAll","string","e","r","t","u","__decorate","Label","exports","getAudio","setAudio","getAudioSrc","LimiterAudio","limitDBFS","maxPCM","fading","getLimitDBFS","setLimitDBFS","getMaxPCM","setMaxPCM","isFading","setFading","playingList","limitRate","clip_3","clip_4","Intro_A","Intro_B","Loop","Outro_A","Outro_B","Outro_B_Test","Outro_C_Test","fade","checkMarker","step","scenario","gameCallMarker","setTotalLimiter","changeRate","getTotalLimiter","totalMaxPCM","numOfPlaying","paused","totalDBFS","log10","sqrt","_i","_i2","_newVolume","audioCtx","url","Audio","processor","createScriptProcessor","addEventListener","undefined","limiterAudio","onaudioprocess","evt","input","inputBuffer","getChannelData","len","aud","abs","pause","uncacheAll","formatStr","duration","splice","idleTime","timeInSecToMarker","_currentTime","o","nextBeatInMilSec","displayNextBeat","getNextBeatInMilSec","p","preId","l","getNextBeatWithAlign","nextBeatAfterGCInMilSec","triggerPoint","compareTime","time_1_milsec","time_2_milsec","limitGap","currentMarker","gapOfBeats","numOfNextBeat","durationInMilSec","timeInMilSec","numOfPassedBeats","diff","alignMarker","alignTimeInMilSec","currentTimeInMilSec","endTimeInMilSec","timeGapInMilSec","scenarioA","scenarioB","scenarioC","background","score","totalScore","flowerPrefab","Prefab","fencePrefab","character","addPersistRootNode","player","size","outlinePool","flowerPool","NodePool","flower","instantiate","put","map","flowerPos","fencePos","maxRow","rowCount","maxCol","colCount","setPosition","getCellPos","fencePool","createObstacle","startPos","putObj","pos","grassPrefab","grassPos","grassPool","_i3","sheepPrefab","sheepPos","sheepIndexList","sheepPool","_i4","createObj","objCollection","hitSheep","sheepTmp","removeFromParent","snowFlakePrefab","iglooPrefab","iceSkatePrefab","snowballPrefab","orgPos","snowFlakePool","snowFlake","snowFlakePos","iglooPos","iceSkatePos","snowballPos","iglooPool","iceSkatePool","snowballIndexList","snowballPool","spdUpAmount","spdUp","snowballSpd","maxSnowballPerCol","_i5","_i6","snowballIndex","checkCollapsed","j","dir","dirTmp","snowballPos_1","snowballPos_2","snowballIndexList_1","snowballIndexList_2","_i7","_i8","_snowballIndex","tutorial_0","isActive","tutorial_1","active","here","endTut","Toggle","_triggerEventInScript_check","scoreDisplay","outline","createOutline","parentNode","order","get","parent","objPrefab","pool","obj","objPosArray","obj_1","obj_2","checkDist","position","sub","getPosition","mag"],"mappings":"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AA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAA,EAAAA,EAAAA,EAAAA,EAAA,EAAA,EAAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAA,EAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAA,EAAA,EAAA,EAAA,EAAAA,EAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAA,EAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAA,EAAAA,EAAA,EAAAA,EAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAA,EAAA,EAAAA,EAAAA,EAAA,EAAA,EAAA,EAAA,EAAAA,EAAA,EAAAA,EAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAA,EAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAA,EAAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAA,EAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAA,EAAA,EAAA,EAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAA,EAAA,EAAA,EAAA,EAAAA,EAAAA,EAAAA,EAAAA,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","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        moveSpeed: 1,\r\n\t\tgame: {\r\n\t\t\tdefault: null,\r\n\t\t\ttype: cc.Node\r\n\t\t}\r\n    },\r\n\t\r\n\tonKeyDown (event) {\r\n        // set a flag when key pressed\r\n        switch(event.keyCode) {\r\n\t\t\tcase cc.macro.KEY.w:\r\n\t\t\t\tthis.pressDown = false;\r\n\t\t\t\tthis.pressLeft = false;\r\n\t\t\t\tthis.pressRight = false;\r\n\t\t\t\tthis.pressUp = true;\r\n                break;\r\n\t\t\tcase cc.macro.KEY.s:\r\n                this.pressUp = false;\t\t\t\t\r\n\t\t\t\tthis.pressLeft = false;\r\n\t\t\t\tthis.pressRight = false;\t\t\t\r\n\t\t\t\tthis.pressDown = true;\r\n                break;\t\r\n            case cc.macro.KEY.a:\r\n                this.pressUp = false;\r\n\t\t\t\tthis.pressDown = false;\t\t\t\t\r\n\t\t\t\tthis.pressRight = false;\t\t\t\t\r\n\t\t\t\tthis.pressLeft = true;\r\n                break;\r\n            case cc.macro.KEY.d:\r\n                this.pressUp = false;\r\n\t\t\t\tthis.pressDown = false;\r\n\t\t\t\tthis.pressLeft = false;\r\n\t\t\t\tthis.pressRight = true;\r\n                break;\r\n        }\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\t\r\n\tinitChar: function () {\r\n\t\t//this.node.setPosition(cc.v2(this.boundLeft, this.boundBot));\r\n\t\tthis.dirChangeable = true;\r\n\t\tthis.pressUp = false;\r\n        this.pressDown = false;\r\n\t\tthis.pressLeft = false;\r\n        this.pressRight = false;\r\n\t\tthis.moveUp = false;\r\n\t\tthis.moveDown = false;\r\n\t\tthis.moveLeft = false;\r\n\t\tthis.moveRight = false;\r\n\t\t// this.game.node.getComponent('utils').putObj(this.game.node, cc.v2(this.node.x, this.node.y));\r\n\t},\r\n\r\n    onLoad: function () {\r\n\t\tthis.boundLeft = -this.game.node.width / 2 + this.game.node.getComponent('utils').outlinePrefab.data.width / 2 + this.game.node.getComponent('utils').gapX;\r\n\t\tthis.boundRight = this.game.node.width / 2 - this.game.node.getComponent('utils').outlinePrefab.data.width / 2 - this.game.node.getComponent('utils').gapX;\r\n\t\tthis.boundBot = -this.game.node.height / 2 + this.game.node.getComponent('utils').outlinePrefab.data.height / 2 + this.game.node.getComponent('utils').gapY;\r\n\t\tthis.boundTop = this.game.node.height / 2 - this.game.node.getComponent('utils').outlinePrefab.data.height / 2 - this.game.node.getComponent('utils').gapY;\r\n\t\tthis.initChar();\r\n\t\tthis.col = this.game.startCell.x;\r\n\t\tthis.row = this.game.startCell.y;\r\n\t\tthis.currentCel = cc.v2(this.col, this.row);\r\n\t\tcc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\r\n\t\tthis.node.zIndex = 2;\r\n\t},\r\n\t\r\n\tonDestroy () {\r\n        // Cancel keyboard input monitoring\r\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\r\n    },\r\n\r\n    // start: function () {\r\n\t\t\r\n    // },\r\n\t\r\n\tcheckMovedInCell: function () {\r\n\t\tif (this.moveUp) {\r\n\t\t\tthis.dirChangeable = false;\r\n\t\t\tthis.node.y += this.moveSpeed;\r\n\t\t\tif ((this.col != this.currentCel.x || this.row != this.currentCel.y) && this.node.y > this.currentCelY) {\r\n\t\t\t\tthis.node.y = this.currentCelY;\r\n\t\t\t\tthis.dirChangeable = true;\r\n\t\t\t\tthis.currentCel = cc.v2(this.col, this.row);\r\n\t\t\t\t//this.game.putFlower(this.game.node, cc.v2(currentCelX - this.game.node.width / 2, currentCelY - this.game.node.height / 2));\r\n\t\t\t\treturn cc.v2(this.currentCelX, this.currentCelY);\r\n\t\t\t}\r\n\t\t} else if (this.moveDown) {\r\n\t\t\tthis.dirChangeable = false;\r\n\t\t\tthis.node.y -= this.moveSpeed;\r\n\t\t\tif ((this.col != this.currentCel.x || this.row != this.currentCel.y) && this.node.y < this.currentCelY) {\r\n\t\t\t\tthis.node.y = this.currentCelY;\r\n\t\t\t\tthis.dirChangeable = true;\r\n\t\t\t\tthis.currentCel = cc.v2(this.col, this.row);\r\n\t\t\t\t//this.game.putFlower(this.game.node, cc.v2(currentCelX - this.game.node.width / 2, currentCelY - this.game.node.height / 2));\r\n\t\t\t\treturn cc.v2(this.currentCelX, this.currentCelY);\r\n\t\t\t}\r\n\t\t} else if (this.moveRight) {\r\n\t\t\tthis.dirChangeable = false;\r\n\t\t\tthis.node.x += this.moveSpeed;\r\n\t\t\tif ((this.col != this.currentCel.x || this.row != this.currentCel.y) && this.node.x > this.currentCelX) {\r\n\t\t\t\tthis.node.x = this.currentCelX;\r\n\t\t\t\tthis.dirChangeable = true;\r\n\t\t\t\tthis.currentCel = cc.v2(this.col, this.row);\r\n\t\t\t\t//this.game.putFlower(this.game.node, cc.v2(currentCelX - this.game.node.width / 2, currentCelY - this.game.node.height / 2));\r\n\t\t\t\treturn cc.v2(this.currentCelX, this.currentCelY);\r\n\t\t\t}\r\n\t\t} else if (this.moveLeft) {\r\n\t\t\tthis.dirChangeable = false;\r\n\t\t\tthis.node.x -= this.moveSpeed;\r\n\t\t\tif ((this.col != this.currentCel.x || this.row != this.currentCel.y) && this.node.x < this.currentCelX) {\r\n\t\t\t\tthis.node.x = this.currentCelX;\r\n\t\t\t\tthis.dirChangeable = true;\r\n\t\t\t\tthis.currentCel = cc.v2(this.col, this.row);\r\n\t\t\t\t//this.game.putFlower(this.game.node, cc.v2(currentCelX - this.game.node.width / 2, currentCelY - this.game.node.height / 2));\r\n\t\t\t\treturn cc.v2(this.currentCelX, this.currentCelY);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t},\r\n\t\r\n\tcheckHitObstacle: function (obstArray) {\r\n\t\tfor (let i = 0; i < obstArray.length; i++) {\r\n\t\t\tif (obstArray[i].x == this.node.x && obstArray[i].y == this.node.y) {\r\n\t\t\t\treturn i;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t},\r\n\t\r\n\tcheckHitCapturedCell: function (obstArray) {\r\n\t\tif (this.capturedCell != null && (this.col != this.capturedCell.x || this.row != this.capturedCell.y)) {\r\n\t\t\tfor (let i = 0; i < obstArray.length; i++) {\r\n\t\t\t\tif (obstArray[i].x == this.node.x && obstArray[i].y == this.node.y) {\r\n\t\t\t\t\treturn i;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t},\r\n\t\r\n\tupdateCapturedCell: function () {\r\n\t\tthis.capturedCell = cc.v2(this.col, this.row);\r\n\t},\r\n\t\r\n\tresetCapturedCell: function () {\r\n\t\tthis.capturedCell = cc.v2(-1, -1);\r\n\t},\r\n\r\n    update: function (dt) {\r\n\t\tthis.col = Math.ceil((this.node.x + this.game.node.width / 2) / this.game.node.getComponent('utils').outlinePrefab.data.width);\r\n\t\tthis.row = Math.ceil((this.node.y + this.game.node.height / 2) / this.game.node.getComponent('utils').outlinePrefab.data.height);\r\n\t\tthis.currentCelX = this.col * this.game.node.getComponent('utils').outlinePrefab.data.width + this.game.node.getComponent('utils').gapX - this.game.node.getComponent('utils').outlinePrefab.data.width / 2 - this.game.node.width / 2;\r\n\t\tthis.currentCelY = this.row * this.game.node.getComponent('utils').outlinePrefab.data.height + this.game.node.getComponent('utils').gapY - this.game.node.getComponent('utils').outlinePrefab.data.height / 2 - this.game.node.height / 2;\r\n\t\tif (this.node.x < this.boundLeft) {\r\n\t\t\tcc.director.loadScene('GameOver');\r\n\t\t\treturn;\r\n\t\t} else if (this.node.x > this.boundRight) {\r\n\t\t\tcc.director.loadScene('GameOver');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (this.node.y < this.boundBot) {\r\n\t\t\tcc.director.loadScene('GameOver');\r\n\t\t\treturn;\r\n\t\t} else if (this.node.y > this.boundTop) {\r\n\t\t\tcc.director.loadScene('GameOver');\r\n\t\t\treturn;\r\n\t\t} \r\n\t\tif (this.game.winGoal.x == this.node.x && this.game.winGoal.y == this.node.y) {\r\n\t\t\tcc.director.loadScene('Win');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (this.dirChangeable) {\r\n\t\t\tif (this.pressUp) {\r\n\t\t\t\tthis.moveUp = true;\r\n\t\t\t\tthis.moveDown = false;\r\n\t\t\t\tthis.moveLeft = false;\r\n\t\t\t\tthis.moveRight = false;\r\n\t\t\t} else if (this.pressDown) {\r\n\t\t\t\tthis.moveUp = false;\r\n\t\t\t\tthis.moveDown = true;\r\n\t\t\t\tthis.moveLeft = false;\r\n\t\t\t\tthis.moveRight = false;\r\n\t\t\t} else if (this.pressLeft) {\r\n\t\t\t\tthis.moveUp = false;\r\n\t\t\t\tthis.moveDown = false;\r\n\t\t\t\tthis.moveLeft = true;\r\n\t\t\t\tthis.moveRight = false;\r\n\t\t\t} else if (this.pressRight) {\r\n\t\t\t\tthis.moveUp = false;\r\n\t\t\t\tthis.moveDown = false;\r\n\t\t\t\tthis.moveLeft = false;\r\n\t\t\t\tthis.moveRight = true;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n});\r\n","// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad: function () {\r\n\t\tlet backgroundNode = cc.find(\"background\");\r\n\t\tthis.node.on('touchstart', function(){\r\n\t\t\tcc.director.loadScene('Stage_0' + (backgroundNode.stage + 1));\r\n\t\t\tcc.game.removePersistRootNode(backgroundNode);\r\n\t\t}, this.node);\r\n\r\n\t\tthis.node.on('touchmove', function (event) {\r\n\r\n\t\t\tvar delta = event.touch.getDelta();\r\n\r\n\t\t\tthis.x += delta.x;\r\n\t\t\tthis.y += delta.y;\r\n\r\n\t\t}, this.node);\r\n\r\n\t\tthis.node.on('touchend', function () {\r\n\t\t}, this.node);\r\n\t},\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n","// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        stageScene: cc.SceneAsset\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad: function () {\r\n\t\t\r\n\t},\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n","// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NewClass extends cc.Component {\r\n\t\r\n\t// For testing\r\n\t@property(cc.Label)\r\n\tprivate audioTestDisplay: cc.Label = null;\r\n\r\n\t// List of seamless loop audios to play\r\n\tprivate seamlessAudioList: Array<cc.Class> = [];\r\n\t\r\n\t// List of fading audios to play\r\n\tprivate fadeAudioList: Array<cc.Class> = [];\r\n\t\r\n\t// Starting time of the lib\r\n\tprivate startTime : number;\r\n\t\r\n\t// FPS\r\n\tprivate fps : number = 0;\r\n\t\r\n\t// Frame count\r\n\tprivate frameCount : number = 0;\r\n\t\r\n\t// Total limiter\r\n\tprivate totalVolume : number = 0;\r\n\t\t\r\n\t// Playing list for limiter\r\n\tprivate audioList: Array<Integer> = [];\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    protected onLoad() {\r\n\t\t\r\n\t\t// Customized class for storing info of seamless audio\r\n\t\tthis.SeamlessAudio = cc.Class({\r\n\t\t\t\r\n\t\t\tproperties: {\r\n\t\t\t\tclip : cc.AudioClip,\r\n\t\t\t\tid: 0,\r\n\t\t\t\tstartBuffer: 0,\r\n\t\t\t\tendBuffer : 0,\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tgetId: function () {\r\n\t\t\t\treturn this.id;\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tsetId: function (value) {\r\n\t\t\t\tthis.id = value;\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tgetStartBuffer: function () {\r\n\t\t\t\treturn this.startBuffer;\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tsetStartBuffer: function (value) {\r\n\t\t\t\tthis.startBuffer = value;\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tgetEndBuffer: function () {\r\n\t\t\t\treturn this.endBuffer;\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tsetEndBuffer: function (value) {\r\n\t\t\t\tthis.endBuffer = value;\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\t// Customized class for storing info of fading audio\r\n\t\tthis.FadeAudio = cc.Class({\r\n\t\t\t\r\n\t\t\tproperties: {\r\n\t\t\t\tid: 0,\r\n\t\t\t\tfadeRate: 0,\r\n\t\t\t\tendVolume: 0,\r\n\t\t\t\tfadeCheckTime: 0,\r\n\t\t\t\tendTime: 0,\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tgetId: function () {\r\n\t\t\t\treturn this.id;\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tsetId: function (value) {\r\n\t\t\t\tthis.id = value;\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tgetFadeRate: function () {\r\n\t\t\t\treturn this.fadeRate;\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tsetFadeRate: function (value) {\r\n\t\t\t\tthis.fadeRate = value;\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tgetEndVolume: function () {\r\n\t\t\t\treturn this.endVolume;\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tsetEndVolume: function (value) {\r\n\t\t\t\tthis.endVolume = value;\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tgetFadeCheckTime: function () {\r\n\t\t\t\treturn this.fadeCheckTime;\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tsetFadeCheckTime: function (value) {\r\n\t\t\t\tthis.fadeCheckTime = value;\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tgetEndTime: function () {\r\n\t\t\t\treturn this.endTime;\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tsetEndTime: function (value) {\r\n\t\t\t\tthis.endTime = value;\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\t// Starting time of the lib\r\n\t\tthis.startTime = (new Date()).getTime();\r\n\t\t\r\n\t\t// For testing\r\n\t\t// this.load();\r\n\t\tcc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\r\n\t\tcc.resources.load(\"Sounds/spark_man\", function (err, clip) {\r\n\t\t\tself.clip_1 = clip;\r\n\t\t});\r\n\t\tcc.resources.load(\"Sounds/Loop\", function (err, clip) {\r\n\t\t\tself.clip_2 = clip;\r\n\t\t});\r\n\t\tthis.markerTest = false;\r\n\t\tthis.totalLimiter(-2);\r\n\t}\r\n\t\r\n\t// For testing\r\n\t// protected load() \r\n\t// {\r\n\t\t// let url = \"Sounds/spark_man\";\r\n\t\t// let loop = true;\r\n\t    // let volume = 1;\r\n\t\t// var self = this;\r\n\t\t// cc.resources.load(url, function (err, clip) {\r\n\t\t\t// let path = clip.nativeUrl;\r\n\t\t\t// let id = self.play(clip, true, 1);\r\n\t\t\t// self.playSeamlessAudio(id, 150, 440);\r\n\t\t\t// self.playFadeAudio(id, 0, 0.9, 10000);\r\n\t\t\t// self.playAtMarker(id, \"0:1:0:0\");\r\n\t\t// });\r\n\t// }\r\n\t\r\n\t// Limiter to avoid clipping and distortion when many audios playing at once\r\n\t// Param:\r\n\t//\t\tclip: audio file (cc.AudioClip)\r\n\t//\t\tvolume: audio volume to play (0.0 ~ 1.0)\r\n\t//\t\tthreshold: limited db (float)\r\n\tprotected limiter(clip, volume, threshold)\r\n\t{\r\n\t\tvar audio = document.createElement('audio');\r\n\t\taudio.src = clip.nativeUrl;\r\n\t\tvar context = new AudioContext();\r\n\t\tvar source = context.createMediaElementSource(audio);\r\n\t\tvar preGain = context.createGain();\r\n\t\tvar limiter = context.createDynamicsCompressor();\r\n\t\tlimiter.threshold.value = threshold; // this is the pitfall, leave some headroom\r\n\t\tlimiter.knee.value = 0.0; // brute force\r\n\t\tlimiter.ratio.value = 20.0; // max compression\r\n\t\tlimiter.attack.value = 0.005; // 5ms attack\r\n\t\tlimiter.release.value = 0.050; // 50ms release\r\n\t\tsource.connect(preGain);\r\n\t\tpreGain.connect(limiter);\r\n\t\tlimiter.connect(context.destination);\r\n\t\tthreshold /= 20;\r\n\t\tlet newVolume = Math.pow(10, threshold);\r\n\t\tconsole.log(\"New volume: \" + newVolume);\r\n\t\tif (newVolume < volume)\r\n\t\t\treturn newVolume;\r\n\t\tif (volume > 1)\r\n\t\t\treturn 1;\r\n\t\telse\r\n\t\t\treturn volume;\r\n\t}\r\n\t\r\n\t// Total limiter for all playing audios\r\n\t// Param:\r\n\t//\t\tthreshold: limited db (float)\r\n\tprotected totalLimiter(threshold)\r\n\t{\r\n\t\tthreshold /= 20;\r\n\t\tthis.totalVolume = Math.pow(10, threshold);\r\n\t\tconsole.log(\"Limiter: \" + this.totalVolume);\r\n\t}\r\n\t\r\n\t// Automatically set limiter for all audios which are playing at the moment\r\n\tprotected setLimiterAuto()\r\n\t{\r\n\t\tif (this.totalVolume > 0 && this.audioList.length > 0)\r\n\t\t{\r\n\t\t\tthis.totalVolume /= this.audioList.length;\r\n\t\t\tlet orgTotalVolume = 0;\r\n\t\t\tfor (let i = 0; i < this.audioList.length; i++)\r\n\t\t\t{\r\n\t\t\t\tif (cc.audioEngine.getState(i) == 1)\r\n\t\t\t\t{\r\n\t\t\t\t\torgTotalVolume += cc.audioEngine.getVolume(i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tconsole.log(\"Original total volume: \" + orgTotalVolume);\r\n\t\t\tlet rate = this.totalVolume / orgTotalVolume;\r\n\t\t\tconsole.log(\"Rate: \" + rate);\r\n\t\t\tfor (let i = 0; i < this.audioList.length; i++)\r\n\t\t\t{\r\n\t\t\t\tconsole.log(\"Old volume \" + i + \" : \" + cc.audioEngine.getVolume(i));\r\n\t\t\t\tlet newVolume = cc.audioEngine.getVolume(i) * rate;\r\n\t\t\t\tif (newVolume < cc.audioEngine.getVolume(i))\r\n\t\t\t\t\tcc.audioEngine.setVolume(this.audioList[i], newVolume);\r\n\t\t\t\tconsole.log(\"New volume \" + i + \" : \" + cc.audioEngine.getVolume(i));\r\n\t\t\t}\r\n\t\t\tthis.totalVolume *= this.audioList.length;\r\n\t\t}\r\n\t}\r\n\t\r\n\t// Customized audio playing function from original cocos engine to add limiter\r\n\t// Param:\r\n\t//\t\tclip: audio file (cc.AudioClip)\r\n\t//\t\tloop: looping (boolean)\r\n\t//\t\tvolume: audio volume to play (0.0 ~ 1.0)\r\n\t//\t\tvolume: audio volume to play (0.0 ~ 1.0)\r\n\t//\t\tthreshold: limited db (float)\r\n\tprotected play(clip, loop, volume, threshold)\r\n\t{\r\n\t\tif (this.totalVolume == 0)\r\n\t\t{\r\n\t\t\treturn cc.audioEngine.play(clip, loop, this.limiter(clip, volume, threshold));\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tlet id = cc.audioEngine.play(clip, loop, this.limiter(clip, volume, threshold));\r\n\t\t\tthis.audioList.push(id);\r\n\t\t\treturn id;\r\n\t\t}\r\n\t}\r\n\t\r\n\t// Get format of audio file (mp3, ogg, wav)\r\n\t// Param:\r\n\t//\t\tclip: audio file (cc.AudioClip)\r\n\tprotected getFormat(clip)\r\n\t{\r\n\t\treturn clip.nativeUrl.substr(clip.nativeUrl.length - 3, 3).toLowerCase();\r\n\t}\r\n\t\r\n\t// Init and add new instance of Seamless audio class to seamless loop list\r\n\t// Param:\r\n\t//\t\tid: id of the playing audio (integer)\r\n\t//\t\tstartBuffer: time to skip from the begining (milisecond)\r\n\t//\t\tendBuffer: time to trim from the end (milisecond)\r\n\tprotected playSeamlessAudio(id, startBuffer, endBuffer)\r\n\t{\r\n\t\tstartBuffer /= 1000;\r\n\t\tendBuffer /= 1000;\r\n\t\tlet audio = new this.SeamlessAudio();\r\n\t\taudio.setId(id);\r\n\t\taudio.setStartBuffer(startBuffer);\r\n\t\taudio.setEndBuffer(endBuffer);\r\n\t\tthis.seamlessAudioList.push(audio);\r\n\t}\r\n\t\r\n\t// Control the timing of all the seamless loop audios\r\n\tprotected seamlessProcess()\r\n\t{\r\n\t\tfor (let i = 0; i < this.seamlessAudioList.length; i++)\r\n\t\t{\r\n\t\t\tif (cc.audioEngine.isLoop(this.seamlessAudioList[i].getId())\r\n\t\t\t\t&& cc.audioEngine.getState(this.seamlessAudioList[i].getId()) == 1\r\n\t\t\t\t&& cc.audioEngine.getCurrentTime(this.seamlessAudioList[i].getId()) > cc.audioEngine.getDuration(this.seamlessAudioList[i].getId()) - this.seamlessAudioList[i].getEndBuffer()\r\n\t\t\t\t)\r\n\t\t\t{\r\n\t\t\t\tcc.audioEngine.setCurrentTime(this.seamlessAudioList[i].getId(), this.seamlessAudioList[i].getStartBuffer());\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t// Init and add new instance of FadeAudio class to fading audio list\r\n\t// Param:\r\n\t//\t\tid: id of the playing audio (integer)\r\n\t//\t\tstartVolume: starting volume of the audio from the begining of fading (0.0 ~ 1.0)\r\n\t//\t\tendVolume: final volume of the audio at the end of fading (0.0 ~ 1.0)\r\n\t// \t\trequiredTime: desired time to reach the final volume (milisecond)\r\n\tprotected playFadeAudio(id, startVolume, endVolume, requiredTime)\r\n\t{\r\n\t\tif (this.fps > 0)\r\n\t\t{\r\n\t\t\tlet remainingTime = (cc.audioEngine.getDuration(id) - cc.audioEngine.getCurrentTime(id)) * 1000;\r\n\t\t\tif (requiredTime == 0 || remainingTime < requiredTime)\r\n\t\t\t{\r\n\t\t\t\trequiredTime = remainingTime;\r\n\t\t\t}\r\n\t\t\tcc.audioEngine.setVolume(id, startVolume);\r\n\t\t\tlet audio = new this.FadeAudio();\r\n\t\t\taudio.setId(id);\r\n\t\t\taudio.setEndVolume(endVolume);\r\n\t\t\taudio.setFadeCheckTime(new Date().getTime());\r\n\t\t\taudio.setEndTime(audio.getFadeCheckTime() + requiredTime);\r\n\t\t\tthis.updateFadeRate(audio);\r\n\t\t\tthis.fadeAudioList.push(audio);\r\n\t\t}\r\n\t}\r\n\t\r\n\t// Calculate the volume changing rate of each frame based on fps and remaining required time\r\n\t// Param:\r\n\t//\t\taudio: audio file (cc.AudioClip)\r\n\tprotected updateFadeRate(audio)\r\n\t{\r\n\t\tlet remainTime = audio.getEndTime() - (new Date()).getTime();\r\n\t\tlet totalFrame = (remainTime/ 1000) * this.fps;\r\n\t\tlet volumeGap = audio.getEndVolume() - cc.audioEngine.getVolume(audio.getId());\r\n\t\taudio.setFadeRate(volumeGap / totalFrame);\r\n\t}\r\n\t\r\n\t// Control the volume of all audios in fading process\r\n\tprotected fadeProcess()\r\n\t{\r\n\t\tfor (let i = 0; i < this.fadeAudioList.length; i++)\r\n\t\t{\r\n\t\t\tif (cc.audioEngine.getVolume(this.fadeAudioList[i].getId()) != this.fadeAudioList[i].getEndVolume())\r\n\t\t\t{\r\n\t\t\t\tif (this.fadeAudioList[i].getFadeRate() > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (cc.audioEngine.getVolume(this.fadeAudioList[i].getId()) > this.fadeAudioList[i].getEndVolume())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcc.audioEngine.setVolume(this.fadeAudioList[i].getId(), this.fadeAudioList[i].getEndVolume());\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (this.fadeAudioList[i].getFadeRate() < 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (cc.audioEngine.getVolume(this.fadeAudioList[i].getId()) < this.fadeAudioList[i].getEndVolume())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcc.audioEngine.setVolume(this.fadeAudioList[i].getId(), this.fadeAudioList[i].getEndVolume());\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.updateFadeRate(this.fadeAudioList[i]);\r\n\t\t\t\tcc.audioEngine.setVolume(this.fadeAudioList[i].getId(), cc.audioEngine.getVolume(this.fadeAudioList[i].getId()) + this.fadeAudioList[i].getFadeRate());\r\n\t\t\t}\r\n\t\t\t// console.log(\"Volume at \" + ((new Date()).getTime() - this.fadeAudioList[i].getFadeCheckTime()) + \" \" + cc.audioEngine.getVolume(this.fadeAudioList[i].getId()));\r\n\t\t}\r\n\t}\r\n\t\r\n\t// Get fps\r\n\tprotected getFPS()\r\n\t{\r\n\t\tif ((new Date()).getTime() - this.startTime >= 1000)\r\n\t\t{\r\n\t\t\tthis.fps = this.frameCount;\r\n\t\t\tthis.frameCount = 0;\r\n\t\t\tthis.startTime = (new Date()).getTime();\r\n\t\t\t// console.log(\"FPS: \" + this.fps);\r\n\t\t}\r\n\t\tthis.frameCount += 1;\r\n\t}\r\n\t\r\n\t// Convert marker to specific time within audio duration\r\n\t// Param:\r\n\t//\t\tmarker: desired time to play the audio with format \"hh:mm:ss:SSS\" \r\n\tprotected markerToTimeInSec(marker)\r\n\t{\r\n\t\tlet timeArray = marker.split(\":\");\r\n\t\tlet hour = 0;\r\n\t\tlet min = 0;\r\n\t\tlet sec = 0;\r\n\t\tlet milSec = 0;\r\n\t\tif (timeArray.length == 4)\r\n\t\t{\r\n\t\t\thour = parseInt(timeArray[0]);\r\n\t\t\tmin = parseInt(timeArray[1]);\r\n\t\t\tsec = parseInt(timeArray[2]);\r\n\t\t\tmilSec = parseInt(timeArray[3]);\r\n\t\t}\r\n\t\telse if (timeArray.length == 3)\r\n\t\t{\r\n\t\t\tmin = parseInt(timeArray[0]);\r\n\t\t\tsec = parseInt(timeArray[1]);\r\n\t\t\tmilSec = parseInt(timeArray[2]);\r\n\t\t}\r\n\t\telse if (timeArray.length == 2)\r\n\t\t{\r\n\t\t\tsec = parseInt(timeArray[0]);\r\n\t\t\tmilSec = parseInt(timeArray[1]);\r\n\t\t}\r\n\t\telse if (timeArray.length == 1)\r\n\t\t{\r\n\t\t\tmilSec = parseInt(timeArray[0]);\r\n\t\t}\r\n\t\tlet totalSec = hour * 3600 + min * 60 + sec + (milSec / 1000);\r\n\t\treturn totalSec;\r\n\t}\r\n\t\r\n\t// Play the audio at desired time with marker\r\n\t// Param:\r\n\t//\t\tmarker: desired time to play the audio with format \"hh:mm:ss:SSS\"\r\n\tprotected playAtMarker(id, marker)\r\n\t{\r\n\t\tcc.audioEngine.setCurrentTime(id, this.markerToTimeInSec(marker));\r\n\t}\r\n\t\r\n\tprotected getCurrentTimeMarker(id)\r\n\t{\r\n\t\tlet currentTime = cc.audioEngine.getCurrentTime(id);\r\n\t\tlet hour = Math.floor(currentTime / 3600);\r\n\t\t// console.log(\"hour \" + hour);\r\n\t\tlet min = Math.floor(currentTime / 60);\r\n\t\tif (min > 59)\r\n\t\t\tmin = 59;\r\n\t\t// console.log(\"min \" + min);\r\n\t\tlet sec = Math.floor(currentTime - hour * 3600 - min * 60);\r\n\t\t//console.log(\"sec \" + sec);\r\n\t\tlet milSec = currentTime - Math.floor(currentTime);\r\n\t\t// console.log(\"milsec \" + milSec);\r\n\t\tmilSec *= 1000;\r\n\t\tif (milSec > 999)\r\n\t\t\tmilSec = 999;\r\n\t\tlet marker = \"\" + hour + \":\" + min + \":\" + sec + \":\" + Math.round(milSec);\r\n\t\treturn marker;\r\n\t}\r\n\t\r\n\tonKeyDown (event) {\r\n        // set a flag when key pressed\r\n        switch(event.keyCode) {\r\n\t\t\tcase cc.macro.KEY.q:\r\n\t\t\t\tthis.markerTest = false;\r\n\t\t\t\tcc.audioEngine.stopAll();\r\n\t\t\t\tthis.id = this.play(self.clip_2, true, 1, 0);\r\n\t\t\t\tthis.playSeamlessAudio(this.id, 0, 0);\r\n\t\t\t\tconsole.log(\"Normal loop\");\r\n\t\t\t\tthis.audioTestDisplay.string = \"Normal loop\";\r\n                break;\r\n\t\t\tcase cc.macro.KEY.w:\r\n\t\t\t\tthis.markerTest = false;\r\n\t\t\t\tcc.audioEngine.stopAll();\r\n\t\t\t\tthis.id = this.play(self.clip_2, true, 1, 0);\r\n\t\t\t\tthis.playSeamlessAudio(this.id, 0, 0);\r\n\t\t\t\tconsole.log(\"Seamless loop\");\r\n\t\t\t\tthis.audioTestDisplay.string = \"Seamless loop\";\r\n                break;\r\n\t\t\tcase cc.macro.KEY.e:\r\n\t\t\t\tthis.markerTest = false;\r\n\t\t\t\tcc.audioEngine.stopAll();\r\n\t\t\t\tthis.id = this.play(self.clip_1, true, 1, 0);\r\n\t\t\t\tthis.playFadeAudio(this.id, 0, 1, 20000);\r\n\t\t\t\tconsole.log(\"Fade in\");\r\n\t\t\t\tthis.audioTestDisplay.string = \"Fade in in 20 secs\";\r\n                break;\r\n\t\t\tcase cc.macro.KEY.r:\r\n\t\t\t\tthis.markerTest = false;\r\n\t\t\t\tcc.audioEngine.stopAll();\r\n\t\t\t\tthis.id = this.play(self.clip_1, true, 1, 0);\r\n\t\t\t\tthis.playFadeAudio(this.id, 1, 0, 15000);\r\n\t\t\t\tconsole.log(\"Fade out\");\r\n\t\t\t\tthis.audioTestDisplay.string = \"Fade out in 15 secs\";\r\n                break;\r\n\t\t\tcase cc.macro.KEY.t:\r\n\t\t\t\tthis.markerTest = false;\r\n\t\t\t\tcc.audioEngine.stopAll();\r\n\t\t\t\tthis.id = this.play(self.clip_1, true, 1, 0);\r\n\t\t\t\tthis.playAtMarker(this.id, \"0:1:2:0\");\r\n\t\t\t\tconsole.log(\"Play at 0:1:2:0\");\r\n\t\t\t\tthis.audioTestDisplay.string = \"Play audio at 0:1:2:0\";\r\n                break;\r\n\t\t\tcase cc.macro.KEY.y:\r\n\t\t\t\tthis.markerTest = false;\r\n\t\t\t\tcc.audioEngine.stopAll();\r\n\t\t\t\tthis.id = this.play(self.clip_1, true, 1, 0);\r\n\t\t\t\tthis.playAtMarker(this.id, \"0:2:5:50\");\r\n\t\t\t\tconsole.log(\"Play at 0:2:5:50\");\r\n\t\t\t\tthis.audioTestDisplay.string = \"Play audio at 0:2:5:50\";\r\n                break;\r\n\t\t\tcase cc.macro.KEY.u:\r\n\t\t\t\tthis.markerTest = false;\r\n\t\t\t\tcc.audioEngine.stopAll();\r\n\t\t\t\tthis.play(self.clip_1, true, 1, -2);\r\n\t\t\t\tthis.playAtMarker(this.play(self.clip_1, true, 0.5, -2), \"0:2:5:50\");\r\n\t\t\t\tthis.playAtMarker(this.play(self.clip_1, true, 0.5, -2), \"0:0:55:50\");\r\n\t\t\t\tconsole.log(\"Limiter\");\r\n\t\t\t\tthis.audioTestDisplay.string = \"Limiter\";\r\n                break;\r\n\t\t\tcase cc.macro.KEY.i:\r\n\t\t\t\tif (!this.markerTest)\r\n\t\t\t\t{\r\n\t\t\t\t\tcc.audioEngine.stopAll();\r\n\t\t\t\t\tthis.id = this.play(self.clip_1, true, 1, -2);\r\n\t\t\t\t\tlet currentTime = this.getCurrentTimeMarker(this.id);\r\n\t\t\t\t\tconsole.log(\"Playing at \" + currentTime);\r\n\t\t\t\t\tthis.audioTestDisplay.string = \"Playing at \" + currentTime;\r\n\t\t\t\t\tthis.markerTest = true;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tlet currentTime = this.getCurrentTimeMarker(this.id);\r\n\t\t\t\t\tconsole.log(\"Playing at \" + currentTime);\r\n\t\t\t\t\tthis.audioTestDisplay.string = \"Playing at \" + currentTime;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n        }\r\n    }\r\n\r\n    protected update(dt: number) {\r\n\t\tthis.getFPS();\r\n\t\tthis.seamlessProcess();\r\n\t\tthis.fadeProcess();\r\n\t\tthis.setLimiterAuto();\r\n\t}\r\n}\r\n","// Learn cc.Class:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        audioTestDisplay: {\r\n            default: null,\r\n            type: cc.Label\r\n        }\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\t\r\n    onLoad: function () {\r\n\t\t\r\n\t\t// List of seamless loop audios to play\r\n\t\tthis.seamlessAudioList = [];\r\n\t\t\r\n\t\t// Customized class for storing info of seamless audio\r\n\t\tthis.SeamlessAudio = cc.Class({\r\n\t\t\t\r\n\t\t\tproperties: {\r\n\t\t\t\taudio : null,\r\n\t\t\t\tstartBuffer: 0,\r\n\t\t\t\tendBuffer : 0,\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tgetAudio: function () {\r\n\t\t\t\treturn this.audio;\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tsetAudio: function (value) {\r\n\t\t\t\tthis.audio = value;\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tgetStartBuffer: function () {\r\n\t\t\t\treturn this.startBuffer;\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tsetStartBuffer: function (value) {\r\n\t\t\t\tthis.startBuffer = value;\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tgetEndBuffer: function () {\r\n\t\t\t\treturn this.endBuffer;\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tsetEndBuffer: function (value) {\r\n\t\t\t\tthis.endBuffer = value;\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\t// List of fading audios to play\r\n\t\tthis.fadeAudioList = [];\r\n\t\t\r\n\t\t// Customized class for storing info of fading audio\r\n\t\tthis.FadeAudio = cc.Class({\r\n\t\t\t\r\n\t\t\tproperties: {\r\n\t\t\t\taudio: null,\r\n\t\t\t\tfadeRate: 0,\r\n\t\t\t\tendVolume: 0,\r\n\t\t\t\tfadeCheckTime: 0,\r\n\t\t\t\tendTime: 0,\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tgetAudio: function () {\r\n\t\t\t\treturn this.audio;\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tsetAudio: function (value) {\r\n\t\t\t\tthis.audio = value;\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tgetAudioSrc: function () {\r\n\t\t\t\treturn this.audio.getAudio();\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tgetFadeRate: function () {\r\n\t\t\t\treturn this.fadeRate;\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tsetFadeRate: function (value) {\r\n\t\t\t\tthis.fadeRate = value;\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tgetEndVolume: function () {\r\n\t\t\t\treturn this.endVolume;\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tsetEndVolume: function (value) {\r\n\t\t\t\tthis.endVolume = value;\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tgetFadeCheckTime: function () {\r\n\t\t\t\treturn this.fadeCheckTime;\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tsetFadeCheckTime: function (value) {\r\n\t\t\t\tthis.fadeCheckTime = value;\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tgetEndTime: function () {\r\n\t\t\t\treturn this.endTime;\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tsetEndTime: function (value) {\r\n\t\t\t\tthis.endTime = value;\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\t// Customized class for storing info of limiter audio\r\n\t\tthis.LimiterAudio = cc.Class({\r\n\t\t\t\r\n\t\t\tproperties: {\r\n\t\t\t\tid: 0,\r\n\t\t\t\tlimitDBFS: 0,\r\n\t\t\t\tmaxPCM: -999,\r\n\t\t\t\taudio: null,\r\n\t\t\t\tfading: false,\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tgetId: function () {\r\n\t\t\t\treturn this.id;\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tsetId: function (value) {\r\n\t\t\t\tthis.id = value;\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tgetLimitDBFS: function () {\r\n\t\t\t\treturn this.limitDBFS;\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tsetLimitDBFS: function (value) {\r\n\t\t\t\tthis.limitDBFS = value;\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tgetMaxPCM: function () {\r\n\t\t\t\treturn this.maxPCM;\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tsetMaxPCM: function (value) {\r\n\t\t\t\tthis.maxPCM = value;\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tgetAudio: function () {\r\n\t\t\t\treturn this.audio;\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tsetAudio: function (value) {\r\n\t\t\t\tthis.audio = value;\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tisFading: function () {\r\n\t\t\t\treturn this.fading;\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tsetFading: function (value) {\r\n\t\t\t\tthis.fading = value;\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\t// List of playing audios\r\n\t\tthis.playingList = [];\r\n\t\t\r\n\t\t// Starting time of the lib\r\n\t\tthis.startTime = (new Date()).getTime();\r\n\t\t\r\n\t\t// FPS\r\n\t\tthis.fps = 0;\r\n\t\t\r\n\t\t// Frame count\r\n\t\tthis.frameCount = 0;\r\n\t\t\r\n\t\t// Total limiter\r\n\t\tthis.totalVolume = 0;\r\n\t\tthis.totalLimiter = -999;\r\n\t\t\r\n\t\t// Playing list for limiter\r\n\t\tthis.audioList = [];\r\n\t\t\r\n\t\t// Volume changing rate\r\n\t\tthis.limitRate = 0;\r\n\t\t\r\n\t\t// Headroom for limiter\r\n\t\t// this.headroom = 0.9;\r\n\t\t\r\n\t\t// For testing\r\n\t\tcc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\r\n\t\tcc.resources.load(\"Sounds/spark_man\", function (err, clip) {\r\n\t\t\tself.clip_1 = clip;\r\n\t\t});\r\n\t\tcc.resources.load(\"Sounds/Loop\", function (err, clip) {\r\n\t\t\tself.clip_2 = clip;\r\n\t\t});\r\n\t\tcc.resources.load(\"Sounds/shadow_man\", function (err, clip) {\r\n\t\t\tself.clip_3 = clip;\r\n\t\t});\r\n\t\tcc.resources.load(\"Sounds/spark_mandrill\", function (err, clip) {\r\n\t\t\tself.clip_4 = clip;\r\n\t\t});\r\n\t\tcc.resources.load(\"Sounds/MP3/Intro_A\", function (err, clip) {\r\n\t\t\tself.Intro_A = clip;\r\n\t\t});\r\n\t\tcc.resources.load(\"Sounds/MP3/Intro_B\", function (err, clip) {\r\n\t\t\tself.Intro_B = clip;\r\n\t\t});\r\n\t\tcc.resources.load(\"Sounds/MP3/Loop\", function (err, clip) {\r\n\t\t\tself.Loop = clip;\r\n\t\t});\r\n\t\tcc.resources.load(\"Sounds/MP3/Outro_A\", function (err, clip) {\r\n\t\t\tself.Outro_A = clip;\r\n\t\t});\r\n\t\tcc.resources.load(\"Sounds/MP3/Outro_B\", function (err, clip) {\r\n\t\t\tself.Outro_B = clip;\r\n\t\t});\r\n\t\tcc.resources.load(\"Sounds/MP3/Outro_B_Test\", function (err, clip) {\r\n\t\t\tself.Outro_B_Test = clip;\r\n\t\t});\r\n\t\tcc.resources.load(\"Sounds/MP3/Outro_C_Test\", function (err, clip) {\r\n\t\t\tself.Outro_C_Test = clip;\r\n\t\t});\r\n\t\tthis.markerTest = false;\r\n\t\t\r\n\t\t// For Scenario Demo\r\n\t\tthis.fade = \"\";\r\n\t\tthis.checkMarker = \"\";\r\n\t\tthis.step = -1;\r\n\t\tthis.scenario = \"\";\r\n\t\tthis.gameCallMarker = 0;\r\n\t},\r\n\t\r\n\t// Limiter to avoid clipping and distortion when many audios playing at once\r\n\t// Param:\r\n\t//\t\tclip: audio file (cc.AudioClip)\r\n\t//\t\tvolume: audio volume to play (0.0 ~ 1.0)\r\n\t//\t\tthreshold: limited db (float)\r\n\t// limiter: function (clip, volume, threshold)\r\n\t// {\t\r\n\t\t// let newVolume = this.maxVolumeFromDBFS(threshold) * this.headroom;\r\n\t\t// console.log(\"New volume: \" + newVolume);\r\n\t\t// if (newVolume < volume)\r\n\t\t\t// return newVolume;\r\n\t\t// if (volume > 1)\r\n\t\t\t// return 1;\r\n\t\t// return volume;\r\n\t// },\r\n\t\r\n\t// maxVolumeFromDBFS: function (threshold)\r\n\t// {\r\n\t\t// this.totalLimiter = threshold;\r\n\t\t// threshold /= 20;\r\n\t\t// return Math.pow(10, threshold);\r\n\t// },\r\n\t\r\n\t// Total limiter for all playing audios\r\n\t// Param:\r\n\t//\t\tthreshold: limited db (float)\r\n\tsetTotalLimiter: function (threshold, changeRate)\r\n\t{\r\n\t\t// this.totalVolume = this.maxVolumeFromDBFS(threshold);\r\n\t\tthis.totalLimiter = threshold;\r\n\t\tthis.limitRate = changeRate;\r\n\t\t// console.log(\"Total volume: \" + this.totalVolume);\r\n\t},\r\n\t\r\n\tgetTotalLimiter: function ()\r\n\t{\r\n\t\treturn this.totalLimiter;\r\n\t},\r\n\t\r\n\t// Automatically set limiter for all audios which are playing at the moment\r\n\t/*\r\n\tsetLimiterAuto: function ()\r\n\t{\r\n\t\tif (this.totalVolume > 0 && this.audioList.length > 0)\r\n\t\t{\r\n\t\t\tlet orgTotalVolume = 0;\r\n\t\t\t// console.log(\"List length: \" + this.audioList.length);\r\n\t\t\tlet numOfPlaying = 0;\r\n\t\t\tfor (let i = 0; i < this.audioList.length; i++)\r\n\t\t\t{\r\n\t\t\t\tif (cc.audioEngine.getState(this.audioList[i]) == 1)\r\n\t\t\t\t{\r\n\t\t\t\t\tnumOfPlaying += 1;\r\n\t\t\t\t\torgTotalVolume += cc.audioEngine.getVolume(this.audioList[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// console.log(\"Num of sound playing: \" + numOfPlaying);\r\n\t\t\tif (numOfPlaying == 0 || orgTotalVolume <= this.totalVolume)\r\n\t\t\t\treturn;\r\n\t\t\t// console.log(\"Original total volume: \" + orgTotalVolume);\r\n\t\t\tthis.totalVolume = this.totalVolume * (this.headroom + (1 - this.headroom) / numOfPlaying);\r\n\t\t\tconsole.log(\"New total volume: \" + this.totalVolume);\r\n\t\t\tlet rate = this.totalVolume / orgTotalVolume;\r\n\t\t\t// console.log(\"Rate: \" + rate);\r\n\t\t\tfor (let i = 0; i < this.audioList.length; i++)\r\n\t\t\t{\r\n\t\t\t\t// console.log(\"State \" + this.audioList[i] + \" : \" + cc.audioEngine.getState(this.audioList[i]));\r\n\t\t\t\tif (cc.audioEngine.getState(this.audioList[i]) == 1)\r\n\t\t\t\t{\r\n\t\t\t\t\t// console.log(\"Old volume \" + i + \" : \" + cc.audioEngine.getVolume(this.audioList[i]));\r\n\t\t\t\t\tlet newVolume = cc.audioEngine.getVolume(this.audioList[i]) * rate;\r\n\t\t\t\t\tif (newVolume < cc.audioEngine.getVolume(this.audioList[i]))\r\n\t\t\t\t\t\tcc.audioEngine.setVolume(this.audioList[i], newVolume);\r\n\t\t\t\t\tconsole.log(\"New volume \" + i + \" : \" + cc.audioEngine.getVolume(this.audioList[i]));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t*/\r\n\t\r\n\tsetLimiterAuto: function ()\r\n\t{\r\n\t\tif (this.playingList.length > 0)\r\n\t\t{\r\n\t\t\tif (this.totalLimiter > -999)\r\n\t\t\t{\r\n\t\t\t\tlet totalMaxPCM = 0;\r\n\t\t\t\tlet numOfPlaying = 0;\r\n\t\t\t\tfor (let i = 0; i < this.playingList.length; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (!this.playingList[i].getAudio().paused && this.playingList[i].getAudio().currentTime > 0 && !this.playingList[i].isFading())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttotalMaxPCM += this.playingList[i].getMaxPCM();\r\n\t\t\t\t\t\tnumOfPlaying += 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// console.log(\"Num of playing: \" + numOfPlaying);\r\n\t\t\t\tif (numOfPlaying == 0)\r\n\t\t\t\t\treturn;\r\n\t\t\t\t// console.log(\"Total max PCM: \" + totalMaxPCM);\r\n\t\t\t\tlet totalDBFS = -999;\r\n\t\t\t\tif (totalMaxPCM != 0)\r\n\t\t\t\t\ttotalDBFS = 20 * Math.log10(totalMaxPCM * Math.sqrt(2));\r\n\t\t\t\t// console.log(\"Total dBFS: \" + totalDBFS);\r\n\t\t\t\tlet newVolume = 0;\r\n\t\t\t\tlet currentDBFS = totalDBFS - (numOfPlaying * 0.8);\r\n\t\t\t\tif (currentDBFS > this.totalLimiter)\r\n\t\t\t\t{\r\n\t\t\t\t\tfor (let i = 0; i < this.playingList.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (!this.playingList[i].getAudio().paused && this.playingList[i].getAudio().currentTime > 0)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tnewVolume = this.playingList[i].getAudio().volume - this.limitRate;\r\n\t\t\t\t\t\t\tif (newVolume > 0)\r\n\t\t\t\t\t\t\t\tthis.playingList[i].getAudio().volume = newVolume;\r\n\t\t\t\t\t\t\t// console.log(\"Audio \" + i + \": \" + this.playingList[i].getAudio().volume);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// else if (currentDBFS < this.totalLimiter - 3)\r\n\t\t\t\t// {\r\n\t\t\t\t\t// for (let i = 0; i < this.playingList.length; i++)\r\n\t\t\t\t\t// {\r\n\t\t\t\t\t\t// if (!this.playingList[i].getAudio().paused && this.playingList[i].getAudio().currentTime > 0)\r\n\t\t\t\t\t\t// {\r\n\t\t\t\t\t\t\t// newVolume = this.playingList[i].getAudio().volume + this.limitRate / 2;\r\n\t\t\t\t\t\t\t// if (newVolume <= 1)\r\n\t\t\t\t\t\t\t\t// this.playingList[i].getAudio().volume = newVolume;\r\n\t\t\t\t\t\t\t// console.log(\"Audio \" + i + \": \" + this.playingList[i].getAudio().volume);\r\n\t\t\t\t\t\t// }\r\n\t\t\t\t\t// }\r\n\t\t\t\t// }\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tfor (let i = 0; i < this.playingList.length; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (!this.playingList[i].getAudio().paused && this.playingList[i].getAudio().currentTime > 0 && !this.playingList[i].isFading())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlet dBFS = 20 * Math.log10(this.playingList[i].getMaxPCM() * Math.sqrt(2)) - 0.8;\r\n\t\t\t\t\t\tif (dBFS > this.playingList[i].getLimitDBFS())\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlet newVolume = this.playingList[i].getAudio().volume -= this.limitRate;\r\n\t\t\t\t\t\t\tif (newVolume > 0)\r\n\t\t\t\t\t\t\t\tthis.playingList[i].getAudio().volume = newVolume;\r\n\t\t\t\t\t\t\t// console.log(\"Audio \" + i + \": \" + this.playingList[i].getAudio().volume);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// else if (dBFS < this.playingList[i].getLimitDBFS() - 3)\r\n\t\t\t\t\t\t// {\r\n\t\t\t\t\t\t\t// let newVolume = this.playingList[i].getAudio().volume += this.limitRate / 2;\r\n\t\t\t\t\t\t\t// if (newVolume <= 1)\r\n\t\t\t\t\t\t\t\t// this.playingList[i].getAudio().volume = newVolume;\r\n\t\t\t\t\t\t\t// console.log(\"Audio \" + i + \": \" + this.playingList[i].getAudio().volume);\r\n\t\t\t\t\t\t// }\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} \r\n\t},\r\n\t\r\n\t// Customized audio playing function from original cocos engine to add limiter\r\n\t// Param:\r\n\t//\t\tclip: audio file (cc.AudioClip)\r\n\t//\t\tloop: looping (boolean)\r\n\t//\t\tvolume: audio volume to play (0.0 ~ 1.0)\r\n\t//\t\tvolume: audio volume to play (0.0 ~ 1.0)\r\n\t//\t\tthreshold: limited db (float)\r\n\tplay: function (clip, loop, volume, limitDBFS)\r\n\t{\r\n\t\tvar audioCtx = new AudioContext();\r\n\t\tvar url = clip.nativeUrl;\r\n\t\tvar audio = new Audio(url);\r\n\t\tvar processor = audioCtx.createScriptProcessor(2048, 1, 1);\r\n\t\tvar source;\r\n\r\n\t\taudio.addEventListener('canplaythrough', function(){\r\n\t\t\tif (source == undefined)\r\n\t\t\t{\r\n\t\t\t\tsource = audioCtx.createMediaElementSource(audio);\r\n\t\t\t\tsource.connect(processor);\r\n\t\t\t\tsource.connect(audioCtx.destination);\r\n\t\t\t\tprocessor.connect(audioCtx.destination);\r\n\t\t\t\taudio.loop = loop;\r\n\t\t\t}\r\n\t\t}, false);\r\n\t\t\r\n\t\taudio.volume = volume;\r\n\t\taudio.play();\r\n\t\t\r\n\t\tlet limiterAudio = new this.LimiterAudio();\r\n\t\tlimiterAudio.setId(this.playingList.length);\r\n\t\tlimiterAudio.setAudio(audio);\r\n\t\tlimiterAudio.setLimitDBFS(limitDBFS);\r\n\t\tthis.playingList.push(limiterAudio);\r\n\t\tlet str = this.getFormat(limiterAudio.getId());\r\n\r\n\t\t// loop through PCM data and calculate average\r\n\t\t// volume for a given 2048 sample buffer\r\n\t\tprocessor.onaudioprocess = function(evt){\r\n\t\tvar input = evt.inputBuffer.getChannelData(0)\r\n\t\t  , len = input.length   \r\n\t\t  // , total = i = 0\r\n\t\t  , aud = null\r\n\t\t  // , total = i = Math.abs(input[0])\r\n\t\t  , maxPCM = Math.abs(input[0]);\r\n\t\t  // , dBFS\r\n\t\t  // , limitRateDown = 0.01;\r\n\t\tif (aud == null)\r\n\t\t\taud = limiterAudio;\r\n\t\t// while ( i < len ) \r\n\t\t\t// total += Math.abs( input[i++] );\r\n\t\t// rms = Math.sqrt( total / len );\r\n\t\t// console.log(\"Total 1: \" + (total / len));\r\n\t\t// total = 0;\r\n\t\tfor (let i = 0; i < len; i++)\r\n\t\t\tif (Math.abs(input[i]) > maxPCM)\r\n\t\t\t\tmaxPCM = Math.abs(input[i]);\r\n\t\taud.setMaxPCM(maxPCM);\r\n\t\t// console.log(\"RMS : \" + rms);\r\n\t\t// dBFS = 20 * Math.log10(rms * Math.sqrt(2));\r\n\t\t// console.log(\"dBFS \" + aud.getId() + \": \" + dBFS);\r\n\t\t// console.log(\"Limit dBFS : \" + aud.getLimitDBFS());\r\n\t\t// if (dBFS > aud.getLimitDBFS() && aud.getAudio().volume - limitRateDown > 0)\r\n\t\t\t// aud.getAudio().volume -= limitRateDown;\r\n\t\t// console.log(\"Volume \" + aud.getId() + \": \" + aud.getAudio().volume);\r\n\t\t};\r\n\t\treturn limiterAudio.getId();\r\n\t\t// let limitedVolume =  this.limiter(clip, volume, threshold);\r\n\t\t// console.log(\"Limited Volume: \" + limitedVolume);\r\n\t\t// if (this.totalVolume == 0)\r\n\t\t// {\r\n\t\t\t// return cc.audioEngine.play(clip, loop, limitedVolume);\r\n\t\t// }\r\n\t\t// else\r\n\t\t// {\r\n\t\t\t// let id = cc.audioEngine.play(clip, loop, limitedVolume);\r\n\t\t\t// this.audioList.push(id);\r\n\t\t\t// return id;\r\n\t\t// }\r\n\t},\r\n\t\r\n\tpause: function (id)\r\n\t{\r\n\t\tthis.playingList[id].getAudio().pause();\r\n\t},\r\n\t\r\n\tuncacheAll: function ()\r\n\t{\r\n\t\tfor (let i = 0; i < this.playingList.length; i++)\r\n\t\t{\r\n\t\t\tthis.playingList[i].getAudio().pause();\r\n\t\t\tthis.playingList[i].getAudio().currentTime = 0;\r\n\t\t}\r\n\t\tthis.playingList = [];\r\n\t\tthis.seamlessAudioList = [];\r\n\t\tthis.fadeAudioList = [];\r\n\t},\r\n\t\r\n\t// Get format of audio file (mp3, ogg, wav)\r\n\t// Param:\r\n\t//\t\tclip: audio file (cc.AudioClip)\r\n\tgetFormat: function (id)\r\n\t{\r\n\t\tlet formatStr = this.playingList[id].getAudio().src;\r\n\t\treturn formatStr.substr(formatStr.length - 3, 3).toLowerCase();\r\n\t\t// return clip.nativeUrl.substr(clip.nativeUrl.length - 3, 3).toLowerCase();\r\n\t},\r\n\t\r\n\t// Init and add new instance of Seamless audio class to seamless loop list\r\n\t// Param:\r\n\t//\t\tid: id of the playing audio (integer)\r\n\t//\t\tstartBuffer: time to skip from the begining (milisecond)\r\n\t//\t\tendBuffer: time to trim from the end (milisecond)\r\n\tplaySeamlessAudio: function (id, startBuffer, endBuffer)\r\n\t{\r\n\t\tstartBuffer /= 1000;\r\n\t\tendBuffer /= 1000;\r\n\t\tlet audio = new this.SeamlessAudio();\r\n\t\taudio.setAudio(this.playingList[id].getAudio());\r\n\t\taudio.setStartBuffer(startBuffer);\r\n\t\taudio.setEndBuffer(endBuffer);\r\n\t\tthis.seamlessAudioList.push(audio);\r\n\t\tthis.playingList[id].currentTime = startBuffer;\r\n\t\t// cc.audioEngine.setCurrentTime(id, startBuffer);\r\n\t},\r\n\t\r\n\t// Control the timing of all the seamless loop audios\r\n\tseamlessProcess: function ()\r\n\t{\r\n\t\tfor (let i = 0; i < this.seamlessAudioList.length; i++)\r\n\t\t{\r\n\t\t\tif (this.seamlessAudioList[i].getAudio().loop\r\n\t\t\t\t&& !this.seamlessAudioList[i].getAudio().paused\r\n\t\t\t\t&& this.seamlessAudioList[i].getAudio().currentTime > this.seamlessAudioList[i].getAudio().duration - this.seamlessAudioList[i].getEndBuffer()\r\n\t\t\t\t)\r\n\t\t\t{\r\n\t\t\t\tthis.seamlessAudioList[i].getAudio().currentTime = this.seamlessAudioList[i].getStartBuffer();\r\n\t\t\t\t// console.log(\"Looped\");\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\r\n\t// Init and add new instance of FadeAudio class to fading audio list\r\n\t// Param:\r\n\t//\t\tid: id of the playing audio (integer)\r\n\t//\t\tstartVolume: starting volume of the audio from the begining of fading (0.0 ~ 1.0)\r\n\t//\t\tendVolume: final volume of the audio at the end of fading (0.0 ~ 1.0)\r\n\t// \t\trequiredTime: desired time to reach the final volume (milisecond)\r\n\tplayFadeAudio: function (id, startVolume, endVolume, requiredTime)\r\n\t{\r\n\t\tif (this.fps > 0)\r\n\t\t{\r\n\t\t\t// cc.audioEngine.setVolume(id, startVolume);\r\n\t\t\tthis.playingList[id].setFading(true);\r\n\t\t\tthis.playingList[id].getAudio().volume = startVolume;\r\n\t\t\tlet audio = new this.FadeAudio();\r\n\t\t\taudio.setAudio(this.playingList[id]);\r\n\t\t\taudio.setEndVolume(endVolume);\r\n\t\t\taudio.setFadeCheckTime(new Date().getTime());\r\n\t\t\tlet remainingTime = (audio.getAudioSrc().duration - audio.getAudioSrc().currentTime) * 1000;\r\n\t\t\tif (!this.playingList[id].getAudio().loop && (requiredTime == 0 || remainingTime < requiredTime))\r\n\t\t\t\trequiredTime = remainingTime;\t\t\r\n\t\t\taudio.setEndTime(audio.getFadeCheckTime() + requiredTime);\r\n\t\t\tthis.updateFadeRate(audio);\r\n\t\t\tthis.fadeAudioList.push(audio);\r\n\t\t}\r\n\t},\r\n\t\r\n\t// Calculate the volume changing rate of each frame based on fps and remaining required time\r\n\t// Param:\r\n\t//\t\taudio: audio file (cc.AudioClip)\r\n\tupdateFadeRate: function (audio)\r\n\t{\r\n\t\tlet remainTime = audio.getEndTime() - (new Date()).getTime();\r\n\t\tlet totalFrame = (remainTime/ 1000) * this.fps;\r\n\t\tlet volumeGap = audio.getEndVolume() - audio.getAudioSrc().volume;\r\n\t\taudio.setFadeRate(volumeGap / totalFrame);\r\n\t},\r\n\t\r\n\t// Control the volume of all audios in fading process\r\n\tfadeProcess: function ()\r\n\t{\r\n\t\tfor (let i = 0; i < this.fadeAudioList.length; i++)\r\n\t\t{\r\n\t\t\tif (this.fadeAudioList[i].getAudioSrc().volume != this.fadeAudioList[i].getEndVolume())\r\n\t\t\t{\r\n\t\t\t\t// if (this.fadeAudioList[i].getFadeRate() > 0)\r\n\t\t\t\t// {\r\n\t\t\t\t\t// if (this.fadeAudioList[i].getAudio().volume > this.fadeAudioList[i].getEndVolume())\r\n\t\t\t\t\t// {\r\n\t\t\t\t\t\t// this.fadeAudioList[i].getAudio().volume = this.fadeAudioList[i].getEndVolume();\r\n\t\t\t\t\t\t// continue;\r\n\t\t\t\t\t// }\r\n\t\t\t\t// }\r\n\t\t\t\t// else if (this.fadeAudioList[i].getFadeRate() < 0)\r\n\t\t\t\t// {\r\n\t\t\t\t\t// if (this.fadeAudioList[i].getAudio().volume < this.fadeAudioList[i].getEndVolume())\r\n\t\t\t\t\t// {\r\n\t\t\t\t\t\t// this.fadeAudioList[i].getAudio().volume = this.fadeAudioList[i].getEndVolume();\r\n\t\t\t\t\t\t// continue;\r\n\t\t\t\t\t// }\r\n\t\t\t\t// }\r\n\t\t\t\tthis.updateFadeRate(this.fadeAudioList[i]);\r\n\t\t\t\tlet newVolume = this.fadeAudioList[i].getAudioSrc().volume + this.fadeAudioList[i].getFadeRate();\r\n\t\t\t\tif (this.fadeAudioList[i].getFadeRate() > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (newVolume > this.fadeAudioList[i].getEndVolume())\r\n\t\t\t\t\t\tnewVolume = this.fadeAudioList[i].getEndVolume();\r\n\t\t\t\t}\r\n\t\t\t\telse if (this.fadeAudioList[i].getFadeRate() < 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (newVolume < this.fadeAudioList[i].getEndVolume())\r\n\t\t\t\t\t\tnewVolume = this.fadeAudioList[i].getEndVolume();\r\n\t\t\t\t}\r\n\t\t\t\tthis.fadeAudioList[i].getAudioSrc().volume = newVolume;\r\n\t\t\t\t// console.log(\"Volume at \" + ((new Date()).getTime() - this.fadeAudioList[i].getFadeCheckTime()) + \" \" + this.fadeAudioList[i].getAudioSrc().volume);\r\n\t\t\t\tif (this.fadeAudioList[i].getAudioSrc().volume == this.fadeAudioList[i].getEndVolume())\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.fadeAudioList[i].getAudio().setFading(false);\r\n\t\t\t\t\tthis.fadeAudioList.splice(i, 1);\r\n\t\t\t\t\ti--;\r\n\t\t\t\t}\r\n\t\t\t\t// cc.audioEngine.setVolume(this.fadeAudioList[i].getId(), cc.audioEngine.getVolume(this.fadeAudioList[i].getId()) + this.fadeAudioList[i].getFadeRate());\r\n\t\t\t}\r\n\t\t}\r\n\t\t// For demo\r\n\t\tif (this.fadeAudioList.length > 0)\r\n\t\t{\r\n\t\t\tif (this.fade == \"in\")\r\n\t\t\t{\r\n\t\t\t\tthis.audioTestDisplay.string = \"Fade in in \" + Math.round(this.idleTime(this.id, 20000, 0) / 1000) + \" secs\";\r\n\t\t\t}\r\n\t\t\telse if (this.fade == \"out\")\r\n\t\t\t{\r\n\t\t\t\tthis.audioTestDisplay.string = \"Fade out in \" + Math.round(this.idleTime(this.id, 15000, 0) / 1000) + \" secs\";\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\r\n\t// Get fps\r\n\tgetFPS: function ()\r\n\t{\r\n\t\tif ((new Date()).getTime() - this.startTime >= 1000)\r\n\t\t{\r\n\t\t\tthis.fps = this.frameCount;\r\n\t\t\tthis.frameCount = 0;\r\n\t\t\tthis.startTime = (new Date()).getTime();\r\n\t\t\t// console.log(\"FPS: \" + this.fps);\r\n\t\t}\r\n\t\tthis.frameCount += 1;\r\n\t},\r\n\t\r\n\t// Convert marker to specific time within audio duration\r\n\t// Param:\r\n\t//\t\tmarker: desired time to play the audio with format \"hh:mm:ss:SSS\" \r\n\tmarkerToTimeInSec: function (marker)\r\n\t{\r\n\t\tlet timeArray = marker.split(\":\");\r\n\t\tlet hour = 0;\r\n\t\tlet min = 0;\r\n\t\tlet sec = 0;\r\n\t\tlet milSec = 0;\r\n\t\tif (timeArray.length == 4)\r\n\t\t{\r\n\t\t\thour = parseInt(timeArray[0]);\r\n\t\t\tmin = parseInt(timeArray[1]);\r\n\t\t\tsec = parseInt(timeArray[2]);\r\n\t\t\tmilSec = parseInt(timeArray[3]);\r\n\t\t}\r\n\t\telse if (timeArray.length == 3)\r\n\t\t{\r\n\t\t\tmin = parseInt(timeArray[0]);\r\n\t\t\tsec = parseInt(timeArray[1]);\r\n\t\t\tmilSec = parseInt(timeArray[2]);\r\n\t\t}\r\n\t\telse if (timeArray.length == 2)\r\n\t\t{\r\n\t\t\tsec = parseInt(timeArray[0]);\r\n\t\t\tmilSec = parseInt(timeArray[1]);\r\n\t\t}\r\n\t\telse if (timeArray.length == 1)\r\n\t\t{\r\n\t\t\tmilSec = parseInt(timeArray[0]);\r\n\t\t}\r\n\t\tlet totalSec = hour * 3600 + min * 60 + sec + (milSec / 1000);\r\n\t\treturn totalSec;\r\n\t},\r\n\t\r\n\t// Play the audio at desired time with marker\r\n\t// Param:\r\n\t//\t\tmarker: desired time to play the audio with format \"hh:mm:ss:SSS\"\r\n\tplayAtMarker: function (id, marker)\r\n\t{\r\n\t\tthis.playingList[id].getAudio().currentTime = this.markerToTimeInSec(marker);\r\n\t\t// cc.audioEngine.setCurrentTime(id, this.markerToTimeInSec(marker));\r\n\t},\r\n\t\r\n\tgetCurrentTimeMarker: function (id)\r\n\t{\r\n\t\tlet currentTime = this.playingList[id].getAudio().currentTime;\r\n\t\treturn this.timeInSecToMarker(currentTime);\r\n\t},\r\n\t\r\n\ttimeInSecToMarker: function (currentTime)\r\n\t{\r\n\t\tlet hour = Math.floor(currentTime / 3600);\r\n\t\t// console.log(\"hour \" + hour);\r\n\t\tlet min = Math.floor(currentTime / 60);\r\n\t\tif (min > 59)\r\n\t\t\tmin = 59;\r\n\t\t// console.log(\"min \" + min);\r\n\t\tlet sec = Math.floor(currentTime - hour * 3600 - min * 60);\r\n\t\t//console.log(\"sec \" + sec);\r\n\t\tlet milSec = currentTime - Math.floor(currentTime);\r\n\t\t// console.log(\"milsec \" + milSec);\r\n\t\tmilSec *= 1000;\r\n\t\tif (milSec > 999)\r\n\t\t\tmilSec = 999;\r\n\t\tlet marker = \"\" + hour + \":\" + min + \":\" + sec + \":\" + Math.round(milSec);\r\n\t\treturn marker;\r\n\t},\r\n\t\r\n\tonKeyDown (event) {\r\n        // set a flag when key pressed\r\n        switch(event.keyCode) {\r\n\t\t\tcase cc.macro.KEY.q:\r\n\t\t\t\tthis.fade = \"\";\r\n\t\t\t\tthis.markerTest = false;\r\n\t\t\t\tthis.scenario= \"\";\r\n\t\t\t\tthis.totalVolume = 0;\r\n\t\t\t\tif (this.playingList.length > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.uncacheAll();\r\n\t\t\t\t\tthis.audioTestDisplay.string = \"Uncached all\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tthis.id = this.play(self.clip_2, true, 1, 0);\r\n\t\t\t\tthis.playSeamlessAudio(this.id, 0, 0);\r\n\t\t\t\tconsole.log(\"Normal loop\");\r\n\t\t\t\tthis.audioTestDisplay.string = \"Normal loop\";\r\n                break;\r\n\t\t\tcase cc.macro.KEY.w:\r\n\t\t\t\tthis.fade = \"\";\r\n\t\t\t\tthis.markerTest = false;\r\n\t\t\t\tthis.scenario= \"\";\r\n\t\t\t\tthis.totalVolume = 0;\r\n\t\t\t\tif (this.playingList.length > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.uncacheAll();\r\n\t\t\t\t\tthis.audioTestDisplay.string = \"Uncached all\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tthis.id = this.play(self.clip_2, true, 1, 0);\r\n\t\t\t\tthis.playSeamlessAudio(this.id, 50, 50);\r\n\t\t\t\tconsole.log(\"Seamless loop\");\r\n\t\t\t\tthis.audioTestDisplay.string = \"Seamless loop\";\r\n                break;\r\n\t\t\tcase cc.macro.KEY.e:\r\n\t\t\t\tthis.fade = \"in\";\r\n\t\t\t\tthis.markerTest = false;\r\n\t\t\t\tthis.scenario= \"\";\r\n\t\t\t\tthis.totalVolume = 0;\r\n\t\t\t\tif (this.playingList.length > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.uncacheAll();\r\n\t\t\t\t\tthis.audioTestDisplay.string = \"Uncached all\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tthis.id = this.play(self.clip_1, true, 1, 0);\r\n\t\t\t\tthis.playFadeAudio(this.id, 0, 1, 20000);\r\n\t\t\t\tthis.gameCallMarker = (new Date()).getTime();\r\n\t\t\t\tconsole.log(\"Fade in\");\r\n                break;\r\n\t\t\tcase cc.macro.KEY.r:\r\n\t\t\t\tthis.fade = \"out\";\r\n\t\t\t\tthis.markerTest = false;\r\n\t\t\t\tthis.scenario= \"\";\r\n\t\t\t\tthis.totalVolume = 0;\r\n\t\t\t\tif (this.playingList.length > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.uncacheAll();\r\n\t\t\t\t\tthis.audioTestDisplay.string = \"Uncached all\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tthis.id = this.play(self.clip_1, true, 1, 0);\r\n\t\t\t\tthis.playFadeAudio(this.id, 1, 0, 15000);\r\n\t\t\t\tthis.gameCallMarker = (new Date()).getTime();\r\n\t\t\t\tconsole.log(\"Fade out\");\r\n                break;\r\n\t\t\tcase cc.macro.KEY.t:\r\n\t\t\t\tthis.fade = \"\";\r\n\t\t\t\tthis.markerTest = false;\r\n\t\t\t\tthis.scenario= \"\";\r\n\t\t\t\tif (this.playingList.length > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.uncacheAll();\r\n\t\t\t\t\tthis.audioTestDisplay.string = \"Uncached all\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tthis.setTotalLimiter(-5, 0.02);\t\t\r\n\t\t\t\tthis.play(self.clip_1, true, 1, 0);\r\n\t\t\t\tthis.play(self.clip_2, true, 1, 0);\r\n\t\t\t\tthis.playAtMarker(this.play(self.clip_3, true, 1, 0), \"0:2:5:50\");\r\n\t\t\t\tthis.playAtMarker(this.play(self.clip_4, true, 1, 0), \"0:0:55:50\");\r\n\t\t\t\tthis.playAtMarker(this.play(self.clip_1, true, 1, 0), \"0:0:55:50\");\r\n\t\t\t\tconsole.log(\"Limiter at -5 dBFS\");\r\n\t\t\t\tthis.audioTestDisplay.string = \"Limiter at -5 dBFS\";\r\n                break;\r\n\t\t\tcase cc.macro.KEY.y:\r\n\t\t\t\tthis.fade = \"\";\r\n\t\t\t\tthis.markerTest = false;\r\n\t\t\t\tthis.scenario= \"\";\r\n\t\t\t\tif (this.playingList.length > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.uncacheAll();\r\n\t\t\t\t\tthis.audioTestDisplay.string = \"Uncached all\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tthis.setTotalLimiter(0, 0.02);\t\t\r\n\t\t\t\tthis.play(self.clip_1, true, 1, 0);\r\n\t\t\t\tthis.play(self.clip_2, true, 1, 0);\r\n\t\t\t\tthis.playAtMarker(this.play(self.clip_3, true, 1, 0), \"0:2:5:50\");\r\n\t\t\t\tthis.playAtMarker(this.play(self.clip_4, true, 1, 0), \"0:0:55:50\");\r\n\t\t\t\tthis.playAtMarker(this.play(self.clip_1, true, 1, 0), \"0:0:55:50\");\r\n\t\t\t\tconsole.log(\"Limiter at 0 dBFS\");\r\n\t\t\t\tthis.audioTestDisplay.string = \"Limiter at 0 dBFS\";\r\n                break;\r\n\t\t\tcase cc.macro.KEY.u:\r\n\t\t\t\tthis.fade = \"\";\r\n\t\t\t\tthis.markerTest = false;\r\n\t\t\t\tthis.scenario= \"\";\r\n\t\t\t\tif (this.playingList.length > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.uncacheAll();\r\n\t\t\t\t\tthis.audioTestDisplay.string = \"Uncached all\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tthis.setTotalLimiter(-2, 0.02);\t\t\r\n\t\t\t\tthis.play(self.clip_1, true, 1, 0);\r\n\t\t\t\tthis.play(self.clip_2, true, 1, 0);\r\n\t\t\t\tthis.playAtMarker(this.play(self.clip_3, true, 1, 0), \"0:2:5:50\");\r\n\t\t\t\tthis.playAtMarker(this.play(self.clip_4, true, 1, 0), \"0:0:55:50\");\r\n\t\t\t\tthis.playAtMarker(this.play(self.clip_1, true, 1, 0), \"0:0:55:50\");\r\n\t\t\t\tconsole.log(\"Limiter at -2 dBFS\");\r\n\t\t\t\tthis.audioTestDisplay.string = \"Limiter at -2 dBFS\";\r\n                break;\r\n\t\t\tcase cc.macro.KEY.i:\r\n\t\t\t\tthis.fade = \"\";\r\n\t\t\t\tthis.totalVolume = 0;\r\n\t\t\t\tthis.scenario= \"\";\r\n\t\t\t\tif (!this.markerTest)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (this.playingList.length > 0)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.uncacheAll();\r\n\t\t\t\t\t\tthis.audioTestDisplay.string = \"Uncached all\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.id = this.play(self.clip_1, true, 1, -2);\r\n\t\t\t\t\tlet currentTime = this.getCurrentTimeMarker(this.id);\r\n\t\t\t\t\tconsole.log(\"Playing at \" + currentTime);\r\n\t\t\t\t\tthis.audioTestDisplay.string = \"Playing at \" + currentTime;\r\n\t\t\t\t\tthis.markerTest = true;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tlet currentTime = this.getCurrentTimeMarker(this.id);\r\n\t\t\t\t\tconsole.log(\"Playing at \" + currentTime);\r\n\t\t\t\t\tthis.audioTestDisplay.string = \"Playing at \" + currentTime;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase cc.macro.KEY.o:\r\n\t\t\t\tthis.fade = \"\";\r\n\t\t\t\tthis.markerTest = false;\r\n\t\t\t\tthis.totalVolume = 0;\r\n\t\t\t\tif (this.scenario != \"A\")\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.step = -1;\r\n\t\t\t\t}\r\n\t\t\t\tthis.scenario = \"A\";\r\n\t\t\t\tif (this.step < 0 || this.step == 5)\r\n\t\t\t\t{\t\r\n\t\t\t\t\tif (this.playingList.length > 0)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.uncacheAll();\r\n\t\t\t\t\t\tthis.audioTestDisplay.string = \"Uncached all\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.step = 0;\r\n\t\t\t\t}\r\n\t\t\t\telse if (this.step == 2)\r\n\t\t\t\t{\r\n\t\t\t\t\t// this.gameCallMarker = (new Date()).getTime();\r\n\t\t\t\t\tthis.gameCallMarker = this.getCurrentTimeMarker(this.id);\r\n\t\t\t\t\tthis.nextBeatInMilSec = this.displayNextBeat = this.getNextBeatInMilSec(this.id, this.gameCallMarker, 444.444, 1);\r\n\t\t\t\t\tthis.step += 1;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase cc.macro.KEY.p:\r\n\t\t\t\tthis.fade = \"\";\r\n\t\t\t\tthis.markerTest = false;\r\n\t\t\t\tthis.totalVolume = 0;\r\n\t\t\t\tif (this.scenario != \"B\")\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.step = -1;\r\n\t\t\t\t}\r\n\t\t\t\tthis.scenario = \"B\";\r\n\t\t\t\tif (this.step < 0 || this.step == 5)\r\n\t\t\t\t{\t\r\n\t\t\t\t\tif (this.playingList.length > 0)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.uncacheAll();\r\n\t\t\t\t\t\tthis.audioTestDisplay.string = \"Uncached all\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.step = 0;\r\n\t\t\t\t\tthis.nextBeatInMilSec = 0;\r\n\t\t\t\t}\r\n\t\t\t\telse if (this.step == 2)\r\n\t\t\t\t{\r\n\t\t\t\t\t// cc.audioEngine.stop(this.preId);\r\n\t\t\t\t\tthis.pause(this.preId);\r\n\t\t\t\t\t// this.gameCallMarker = (new Date()).getTime();\r\n\t\t\t\t\tthis.gameCallMarker = this.getCurrentTimeMarker(this.id);\r\n\t\t\t\t\tthis.nextBeatInMilSec = this.displayNextBeat = this.getNextBeatInMilSec(this.id, this.gameCallMarker, 444.444, 1);\r\n\t\t\t\t\tthis.step += 1;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase cc.macro.KEY.l:\r\n\t\t\t\tthis.fade = \"\";\r\n\t\t\t\tthis.markerTest = false;\r\n\t\t\t\tthis.totalVolume = 0;\r\n\t\t\t\tif (this.scenario != \"C\")\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.step = -1;\r\n\t\t\t\t}\r\n\t\t\t\tthis.scenario = \"C\";\r\n\t\t\t\tif (this.step < 0 || this.step == 4)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (this.playingList.length > 0)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.uncacheAll();\r\n\t\t\t\t\t\tthis.audioTestDisplay.string = \"Uncached all\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.step = 0;\r\n\t\t\t\t}\r\n\t\t\t\telse if (this.step == 1)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.gameCallMarker = this.getCurrentTimeMarker(this.id);\r\n\t\t\t\t\t// this.nextBeatInMilSec = this.displayNextBeat = this.getNextBeatInMilSec(this.id, this.gameCallMarker, 444.444, 2);\r\n\t\t\t\t\tthis.nextBeatInMilSec = this.displayNextBeat = this.getNextBeatWithAlign(this.id, this.gameCallMarker, \"0:0:0:573\", 444.444);\r\n\t\t\t\t\tthis.nextBeatAfterGCInMilSec = this.getNextBeatInMilSec(this.id, this.gameCallMarker, 444.444, 1);\r\n\t\t\t\t\tthis.triggerPoint = this.nextBeatInMilSec - 573;\r\n\t\t\t\t\tthis.step += 1;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n        }\r\n    },\r\n\t\r\n\tcompareTime: function (time_1_milsec, time_2_milsec, limitGap)\r\n\t{\r\n\t\t// console.log(\"Current time: \" + time_1_milsec);\r\n\t\t// console.log(\"End time: \" + time_2_milsec);\r\n\t\treturn (time_2_milsec - time_1_milsec) < limitGap;\r\n\t},\r\n\t\r\n\tgetNextBeatInMilSec: function (id, currentMarker, gapOfBeats, numOfNextBeat)\r\n\t{\r\n\t\tlet durationInMilSec = this.playingList[id].getAudio().duration * 1000;\r\n\t\t// console.log(\"Duration: \" + durationInMilSec);\r\n\t\tlet timeInMilSec = this.markerToTimeInSec(currentMarker) * 1000;\r\n\t\tif (this.compareTime(timeInMilSec, durationInMilSec, 100))\r\n\t\t\ttimeInMilSec -= 100;\r\n\t\t// console.log(\"Current Beat: \" + (timeInMilSec / 1000));\r\n\t\tlet numOfPassedBeats = Math.floor(timeInMilSec / gapOfBeats);\r\n\t\tlet totalBeats = Math.ceil(durationInMilSec / gapOfBeats);\r\n\t\tlet diff = totalBeats - numOfPassedBeats - numOfNextBeat;\r\n\t\tlet nextBeatInMilSec = 0;\r\n\t\tif (diff == 0)\r\n\t\t\treturn durationInMilSec;\r\n\t\telse if (diff > 0)\r\n\t\t\tnextBeatInMilSec = gapOfBeats * (numOfPassedBeats + numOfNextBeat);\r\n\t\telse\r\n\t\t\tnextBeatInMilSec = gapOfBeats * diff;\r\n\t\t// console.log(\"Next beat: \" + nextBeatInMilSec);\r\n\t\t\r\n\t\t// console.log(\"Next Beat: \" + nextBeatInMilSec);\r\n\t\t// if (this.compareTime(nextBeatInMilSec, durationInMilSec, 100))\r\n\t\t\t// if (numOfNextBeat == 1)\r\n\t\t\t\t// return durationInMilSec;\r\n\t\t\t// else\r\n\t\t\t// {\r\n\t\t\t\t// numOfPassedBeats = Math.ceil(Math.abs(nextBeatInMilSec - durationInMilSec) / gapOfBeats);\r\n\t\t\t// }\r\n\t\treturn nextBeatInMilSec;\r\n\t},\r\n\t\r\n\tgetNextBeatWithAlign: function (id, currentMarker, alignMarker, gapOfBeats)\r\n\t{\r\n\t\tlet nextBeatInMilSec = this.getNextBeatInMilSec(id, currentMarker, gapOfBeats, 1);\r\n\t\tlet alignTimeInMilSec = this.markerToTimeInSec(alignMarker) * 1000;\r\n\t\tlet currentTimeInMilSec = this.markerToTimeInSec(currentMarker) * 1000;\r\n\t\tif (alignTimeInMilSec > gapOfBeats)\r\n\t\t\twhile (nextBeatInMilSec - alignTimeInMilSec < currentTimeInMilSec)\r\n\t\t\t\tnextBeatInMilSec += gapOfBeats;\r\n\t\t// console.log(\"Next beat with alignment: \" + nextBeatInMilSec);\r\n\t\treturn nextBeatInMilSec\r\n\t},\r\n\t\r\n\tidleTime: function (id, endTimeInMilSec, limitGap)\r\n\t{\r\n\t\t// console.log(\"Game call in milsec: \" + (this.markerToTimeInSec(this.gameCallMarker) * 1000));\r\n\t\t// console.log(\"Next beat in milsec: \" + this.nextBeatInMilSec);\r\n\t\t// console.log(\"Current time: \" + (this.playingList[id].getAudio().currentTime * 1000));\r\n\t\tlet timeGapInMilSec = endTimeInMilSec - (this.playingList[id].getAudio().currentTime * 1000);\r\n\t\t// console.log(\"Time gap in milsec: \" + timeGapInMilSec);\r\n\t\tif (timeGapInMilSec <= limitGap)\r\n\t\t\tthis.nextBeatInMilSec = 0;\r\n\t\tif (timeGapInMilSec < 0)\r\n\t\t\ttimeGapInMilSec = 0;\r\n\t\treturn timeGapInMilSec;\r\n\t},\r\n\t\r\n\tscenarioA: function ()\r\n\t{\r\n\t\tif (this.scenario == \"A\")\r\n\t\t{\r\n\t\t\tif (this.step == 0)\r\n\t\t\t{\r\n\t\t\t\tthis.nextBeatInMilSec = 0;\r\n\t\t\t\tthis.id = this.play(self.Intro_A, false, 1, 0);\r\n\t\t\t\tthis.preId = this.id;\r\n\t\t\t\tthis.step += 1;\r\n\t\t\t}\r\n\t\t\telse if (this.step == 1)\r\n\t\t\t{\r\n\t\t\t\tthis.checkMarker = this.getCurrentTimeMarker(this.id);\r\n\t\t\t\tif (this.compareTime(this.markerToTimeInSec(this.checkMarker) * 1000, this.playingList[this.id].getAudio().duration * 1000, 120))\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.pause(this.id);\r\n\t\t\t\t\tthis.id = this.play(self.Loop, true, 1, 0);\r\n\t\t\t\t\tthis.playSeamlessAudio(this.id, 0, 50);\r\n\t\t\t\t\tthis.step += 1;\r\n\t\t\t\t}\r\n\t\t\t\tthis.audioTestDisplay.string = \"Scenario A: Intro A at \" + this.getCurrentTimeMarker(this.id);\r\n\t\t\t}\r\n\t\t\telse if (this.step == 2)\r\n\t\t\t{\r\n\t\t\t\tthis.checkMarker = this.getCurrentTimeMarker(this.id);\r\n\t\t\t\tthis.audioTestDisplay.string = \"Scenario A: Loop at \" + this.checkMarker;\r\n\t\t\t}\r\n\t\t\telse if (this.step == 3)\r\n\t\t\t{\r\n\t\t\t\tif (this.nextBeatInMilSec > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.audioTestDisplay.string = \"Scenario A: Loop at \" + this.getCurrentTimeMarker(this.id) + \"\\n\" \r\n\t\t\t\t\t+ \"Game call detected at \" + this.gameCallMarker + \" and Outro A triggers on next beat \" + this.timeInSecToMarker(this.nextBeatInMilSec / 1000) + \"\\n\"\r\n\t\t\t\t\t+ \"Waiting until next beat after \" + this.idleTime(this.id, this.nextBeatInMilSec, 50)  + \" secs\";\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.pause(this.id);\r\n\t\t\t\t\tthis.id = this.play(self.Outro_A, false, 1, 0);\r\n\t\t\t\t\tthis.playingList[this.id].getAudio().currentTime = 0.04;\r\n\t\t\t\t\tthis.step += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (this.step == 4)\r\n\t\t\t{\r\n\t\t\t\tthis.audioTestDisplay.string = \"Scenario A: Outro A at \" + this.getCurrentTimeMarker(this.id) + \"\\n\"\r\n\t\t\t\t+ \"Game call detected at \" + this.gameCallMarker + \" and Outro A triggered on next beat \" + this.timeInSecToMarker(this.displayNextBeat / 1000);\r\n\t\t\t\tif (this.playingList[this.id].getAudio().paused && this.playingList[this.id].getAudio().currentTime >= this.playingList[this.id].getAudio().duration)\r\n\t\t\t\t\tthis.step += 1;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\r\n\tscenarioB: function ()\r\n\t{\r\n\t\tif (this.scenario == \"B\")\r\n\t\t{\r\n\t\t\tif (this.step == 0)\r\n\t\t\t{\r\n\t\t\t\tthis.nextBeatInMilSec = 0;\r\n\t\t\t\tthis.id = this.play(self.Intro_B, false, 1, 0);\r\n\t\t\t\tthis.step += 1;\r\n\t\t\t}\r\n\t\t\telse if (this.step == 1)\r\n\t\t\t{\r\n\t\t\t\tif (this.nextBeatInMilSec == 0)\r\n\t\t\t\t\tthis.nextBeatInMilSec = this.getNextBeatInMilSec(this.id, \"0:0:0:0\", 573, 1);\r\n\t\t\t\tif (this.compareTime(this.playingList[this.id].getAudio().currentTime * 1000, this.nextBeatInMilSec, 120))\r\n\t\t\t\t// if (this.playingList[this.id].getAudio().currentTime * 1000 >= this.nextBeatInMilSec)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.preId = this.id;\r\n\t\t\t\t\tthis.id = this.play(self.Loop, true, 1, 0);\r\n\t\t\t\t\tthis.playSeamlessAudio(this.id, 0, 50);\r\n\t\t\t\t\tthis.nextBeatInMilSec = 0;\r\n\t\t\t\t\tthis.step += 1;\r\n\t\t\t\t}\r\n\t\t\t\tthis.audioTestDisplay.string = \"Scenario B: Intro B at \" + this.getCurrentTimeMarker(this.id) + \"\\n\" + \"Loop triggers on next beat \" + this.timeInSecToMarker(this.nextBeatInMilSec / 1000);\r\n\t\t\t}\r\n\t\t\telse if (this.step == 2)\r\n\t\t\t{\r\n\t\t\t\tthis.checkMarker = this.getCurrentTimeMarker(this.id);\r\n\t\t\t\tif (!this.compareTime(this.playingList[this.preId].getAudio().currentTime * 1000, this.playingList[this.preId].getAudio().duration * 1000, 0.5))\r\n\t\t\t\t\tthis.audioTestDisplay.string = \"Scenario B: Intro B at \" + this.getCurrentTimeMarker(this.preId) + \"\\n\" + \"Loop at \" + this.checkMarker;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis.audioTestDisplay.string = \"Scenario B: Loop at \" + this.checkMarker;\r\n\t\t\t}\r\n\t\t\telse if (this.step == 3)\r\n\t\t\t{\r\n\t\t\t\tif (this.nextBeatInMilSec > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.audioTestDisplay.string = \"Scenario A: Loop at \" + this.getCurrentTimeMarker(this.id) + \"\\n\" \r\n\t\t\t\t\t+ \"Game call detected at \" + this.gameCallMarker + \" and Outro B triggers on next beat \" + this.timeInSecToMarker(this.nextBeatInMilSec / 1000) + \"\\n\"\r\n\t\t\t\t\t+ \"Waiting until next beat after \" + this.idleTime(this.id, this.nextBeatInMilSec, 50)  + \" secs\";\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.preId = this.id;\t\t\t\t\r\n\t\t\t\t\tthis.id = this.play(self.Outro_B_Test, false, 1, 0);\r\n\t\t\t\t\tthis.playFadeAudio(this.preId, this.playingList[this.preId].getAudio().volume, 0, 888);\r\n\t\t\t\t\tthis.step += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (this.step == 4)\r\n\t\t\t{\r\n\t\t\t\tif (this.playingList[this.preId].getAudio().volume > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.audioTestDisplay.string = \"Scenario B: Loop at \" + this.getCurrentTimeMarker(this.preId) + \" fading out until marker (0:0:0:888) of Outro B\\n\" \r\n\t\t\t\t\t+ \"Scenario B: Outro B at \" + this.getCurrentTimeMarker(this.id) + \"\\n\"\r\n\t\t\t\t\t+ \"Game call detected at \" + this.gameCallMarker + \" and Outro B triggered on next beat \" + this.timeInSecToMarker(this.displayNextBeat / 1000);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tif (!this.playingList[this.preId].getAudio().paused)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.pause(this.preId);\r\n\t\t\t\t\t\tthis.playingList[this.preId].getAudio().currentTime = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.audioTestDisplay.string = \"Loop finished fading out at marker (0:0:0:888)\\n\"\r\n\t\t\t\t\t+ \"Scenario B: Outro B at \" + this.getCurrentTimeMarker(this.id) + \"\\n\"\r\n\t\t\t\t\t+ \"Game call detected at \" + this.gameCallMarker + \" and Outro B triggered on next beat \" + this.timeInSecToMarker(this.displayNextBeat / 1000);\r\n\t\t\t\t}\r\n\t\t\t\tif (this.playingList[this.id].getAudio().paused && this.playingList[this.id].getAudio().currentTime >= this.playingList[this.id].getAudio().duration)\r\n\t\t\t\t\tthis.step += 1;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\r\n\tscenarioC: function ()\r\n\t{\r\n\t\tif (this.scenario == \"C\")\r\n\t\t{\r\n\t\t\tif (this.step == 0)\r\n\t\t\t{\r\n\t\t\t\tthis.nextBeatInMilSec = 0;\r\n\t\t\t\tthis.id = this.play(self.Loop, true, 1, 0);\r\n\t\t\t\tthis.playSeamlessAudio(this.id, 0, 50);\r\n\t\t\t\tthis.step += 1;\r\n\t\t\t}\r\n\t\t\telse if (this.step == 1)\r\n\t\t\t{\r\n\t\t\t\tthis.audioTestDisplay.string = \"Scenario C: Loop at \" + this.getCurrentTimeMarker(this.id);\r\n\t\t\t}\r\n\t\t\telse if (this.step == 2)\r\n\t\t\t{\r\n\t\t\t\tif (this.nextBeatInMilSec > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.audioTestDisplay.string = \"Scenario C: Loop at \" + this.getCurrentTimeMarker(this.id) + \"\\n\" \r\n\t\t\t\t\t+ \"Game call detected at \" + this.gameCallMarker + \" and Outro C triggers at \" + this.timeInSecToMarker(this.triggerPoint / 1000) + \"\\n\"\r\n\t\t\t\t\t+ \"Waiting until Outro C triggers after \" + this.idleTime(this.id, this.triggerPoint, 50)  + \" secs\";\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.preId = this.id;\r\n\t\t\t\t\tthis.id = this.play(self.Outro_C_Test, false, 1, 0);\r\n\t\t\t\t\tthis.playFadeAudio(this.preId, this.playingList[this.preId].getAudio().volume, 0, 573);\r\n\t\t\t\t\tthis.step += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (this.step == 3)\r\n\t\t\t{\r\n\t\t\t\tif (this.playingList[this.preId].getAudio().volume > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.audioTestDisplay.string = \"Scenario C: Loop at \" + this.getCurrentTimeMarker(this.preId) \r\n\t\t\t\t\t+ \" fading out until next \" + (Math.round((this.displayNextBeat - this.nextBeatAfterGCInMilSec) / 444.444) + 1) + \" beat(s) \" + this.timeInSecToMarker(this.displayNextBeat / 1000) \r\n\t\t\t\t\t+ \"\\n\" + \"Scenario C: Outro C at \" + this.getCurrentTimeMarker(this.id) + \"\\n\"\r\n\t\t\t\t\t+ \"Game call detected at \" + this.gameCallMarker + \" and Outro C triggered at \" + this.timeInSecToMarker(this.triggerPoint / 1000);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tif (!this.playingList[this.preId].getAudio().paused)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.pause(this.preId);\r\n\t\t\t\t\t\tthis.playingList[this.preId].getAudio().currentTime = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.audioTestDisplay.string = \"Loop finished fading out after \" + (Math.round((this.displayNextBeat - this.nextBeatAfterGCInMilSec) / 444.444) + 1) + \" beat(s) \"\r\n\t\t\t\t\t+ this.timeInSecToMarker(this.displayNextBeat / 1000) + \"\\n\"\r\n\t\t\t\t\t+ \"Scenario C: Outro B at \" + this.getCurrentTimeMarker(this.id) + \"\\n\"\r\n\t\t\t\t\t+ \"Game call detected at \" + this.gameCallMarker + \" and Outro C triggered at \" + this.timeInSecToMarker(this.triggerPoint / 1000);\r\n\t\t\t\t}\r\n\t\t\t\tif (this.playingList[this.id].getAudio().paused && this.playingList[this.id].getAudio().currentTime >= this.playingList[this.id].getAudio().duration)\r\n\t\t\t\t\tthis.step += 1;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n    update: function (dt)\r\n\t{\r\n\t\tthis.getFPS();\r\n\t\tthis.seamlessProcess();\r\n\t\tthis.fadeProcess();\r\n\t\tthis.setLimiterAuto();\r\n\t\t// For testing\r\n\t\tthis.scenarioA();\r\n\t\tthis.scenarioB();\r\n\t\tthis.scenarioC();\r\n\t},\r\n});\r\n","// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n\t\tbackground: {\r\n            default: null,\r\n\t\t\tstage: 0,\r\n\t\t\tscore: 0,\r\n\t\t\ttotalScore: 0,\r\n            type: cc.Node\r\n        },\r\n\t\tflowerPrefab: {\r\n\t\t\tdefault: null,\r\n            type: cc.Prefab\r\n\t\t},\r\n\t\tfencePrefab: {\r\n\t\t\tdefault: null,\r\n            type: cc.Prefab\r\n\t\t},\r\n\t\twinGoal: {\r\n\t\t\tdefault: null,\r\n\t\t\ttype: cc.Node\r\n\t\t},\r\n\t\tcharacter: {\r\n\t\t\tdefault: null,\r\n\t\t\ttype: cc.Node\r\n\t\t}\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad: function () {\r\n\t\tcc.game.addPersistRootNode(this.background);\r\n\t\tthis.background.zIndex = -1;\r\n\t\tthis.background.stage = 1;\r\n\t\tthis.player = this.character.getComponent('character');\r\n\t\tthis.character.getComponent('character').game = this;\r\n\t\tlet size = this.node.getComponent('utils').outlinePool.size();\r\n\t\tthis.flowerPool = new cc.NodePool();\r\n\t\tfor (let i = 0; i < size; i++) {\r\n\t\t\tlet flower = cc.instantiate(this.flowerPrefab); // create node instance\r\n\t\t\tthis.flowerPool.put(flower); // populate your pool with put method\r\n\t\t}\r\n\t\tlet x = -1;\r\n\t\tthis.map = [\r\n\t\t\tx, x, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, x, x, x, \r\n\t\t\tx, x, x, x, x, x, x, 1, x, x, x, x, x, x, x, x, x, x, x, \r\n\t\t\tx, x, 1, x, x, x, x, 1, x, x, x, x, x, x, x, x, x, x, x, \r\n\t\t\tx, x, 1, x, x, x, 1, 1, x, 1, 1, 1, 1, 1, 1, 1, 1, x, x, \r\n\t\t\tx, x, 1, x, x, x, x, 1, x, x, x, x, x, x, x, 1, 1, x, x, \r\n\t\t\tx, x, 1, 1, 1, 1, x, 1, x, x, x, x, x, x, x, 1, 1, x, x, \r\n\t\t\tx, x, x, x, x, 1, x, 1, x, 2, x, x, x, x, x, 1, 1, x, x, \r\n\t\t\t1, 1, 1, 1, x, 1, x, 1, x, x, x, x, x, x, x, 1, 1, x, x, \r\n\t\t\tx, x, x, x, x, 1, x, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, x, x, \r\n\t\t\tx, x, x, x, x, 1, x, x, x, x, x, x, x, x, x, x, 1, 1, x, \r\n\t\t\tx, x, x, x, x, 1, x, x, x, x, 1, 1, 1, 1, x, x, x, x, x, \r\n\t\t\t0, x, x, x, x, 1, x, x, x, x, 1, 1, 1, 1, x, x, x, x, x\r\n\t\t];\r\n\t\tthis.flowerPos = [];\r\n\t\tthis.fencePos = [];\r\n\t\tlet maxRow = this.node.getComponent('utils').rowCount;\r\n\t\tlet maxCol = this.node.getComponent('utils').colCount;\r\n\t\tlet colCount = 0;\r\n\t\tfor (let i = 0; i < this.map.length; i++) {\r\n\t\t\tif (i == colCount + maxCol) {\r\n\t\t\t\tmaxRow -= 1;\r\n\t\t\t\tcolCount += maxCol;\r\n\t\t\t}\r\n\t\t\tif (this.map[i] == 0) {\r\n\t\t\t\tthis.startCell = cc.v2(i + 1 - colCount, maxRow);\r\n\t\t\t} else if (this.map[i] == 1) {\r\n\t\t\t\tthis.fencePos.push(cc.v2(i + 1 - colCount, maxRow));\r\n\t\t\t} else if (this.map[i] == 2) {\r\n\t\t\t\tthis.winGoal.setPosition(this.node.getComponent('utils').getCellPos(i + 1 - colCount, maxRow));\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.fencePool = new cc.NodePool();\r\n\t\tfor (let i = 0; i < this.fencePos.length; i++) {\r\n\t\t\tthis.fencePos[i] = this.node.getComponent('utils').createObstacle(this.node, this.fencePos[i], this.fencePrefab, this.fencePool, true);\r\n\t\t}\r\n\t\tlet startPos = this.node.getComponent('utils').getCellPos(this.startCell.x, this.startCell.y);\r\n\t\tthis.player.node.setPosition(startPos);\r\n\t\tthis.background.score = this.node.getComponent('utils').putObj(this.node, startPos, this.flowerPrefab, this.flowerPool, this.flowerPos, null);\r\n\t\tthis.background.totalScore = this.node.getComponent('utils').totalScore;\r\n\t},\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    update: function (dt) {\r\n\t\tlet pos = this.player.checkMovedInCell();\r\n\t\tif (this.player.checkHitCapturedCell(this.flowerPos) != null) {\r\n\t\t\tcc.director.loadScene('GameOver');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (this.player.checkHitObstacle(this.fencePos) != null) {\r\n\t\t\tcc.director.loadScene('GameOver');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (pos != null) {\r\n\t\t\tthis.background.score = this.node.getComponent('utils').putObj(this.node, pos, this.flowerPrefab, this.flowerPool, this.flowerPos, this.player);\r\n\t\t} \r\n\t},\r\n});\r\n","// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        background: {\r\n            default: null,\r\n\t\t\tstage: 0,\r\n\t\t\tscore: 0,\r\n\t\t\ttotalScore: 0,\r\n            type: cc.Node\r\n        },\r\n\t\tflowerPrefab: {\r\n\t\t\tdefault: null,\r\n            type: cc.Prefab\r\n\t\t},\r\n\t\tfencePrefab: {\r\n\t\t\tdefault: null,\r\n            type: cc.Prefab\r\n\t\t},\r\n\t\tgrassPrefab: {\r\n\t\t\tdefault: null,\r\n            type: cc.Prefab\r\n\t\t},\r\n\t\twinGoal: {\r\n\t\t\tdefault: null,\r\n\t\t\ttype: cc.Node\r\n\t\t},\r\n\t\tcharacter: {\r\n\t\t\tdefault: null,\r\n\t\t\ttype: cc.Node\r\n\t\t}\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad: function () {\r\n\t\tcc.game.addPersistRootNode(this.background);\r\n\t\tthis.background.zIndex = -1;\r\n\t\tthis.background.stage = 2;\r\n\t\tthis.player = this.character.getComponent('character');\r\n\t\tthis.character.getComponent('character').game = this;\r\n\t\tlet size = this.node.getComponent('utils').outlinePool.size();\r\n\t\tthis.flowerPool = new cc.NodePool();\r\n\t\tfor (let i = 0; i < size; i++) {\r\n\t\t\tlet flower = cc.instantiate(this.flowerPrefab); // create node instance\r\n\t\t\tthis.flowerPool.put(flower); // populate your pool with put method\r\n\t\t}\r\n\t\tlet x = -1;\r\n\t\tthis.map = [\r\n\t\t\t0, x, x, x, x, x, 1, x, x, x, x, x, x, x, x, x, x, x, x, \r\n\t\t\tx, x, 1, 1, 1, x, 1, x, 2, x, x, x, x, x, 1, 1, 1, 1, x, \r\n\t\t\t1, 1, 1, 1, x, x, 1, x, 1, 1, 1, 1, 1, 1, x, x, x, x, x, \r\n\t\t\tx, x, x, x, x, 2, 1, x, 2, x, x, x, x, x, x, 2, 1, 1, 1, \r\n\t\t\tx, x, 2, x, x, 1, x, x, x, x, 1, x, x, 2, x, x, x, x, x, \r\n\t\t\t2, x, x, 1, 1, 1, 1, x, x, x, x, x, x, x, x, x, x, x, x, \r\n\t\t\t1, 1, x, x, x, 2, 1, x, x, 3, 1, 1, 1, 1, 1, x, 1, 1, 1, \r\n\t\t\t2, 1, x, x, x, x, 1, 1, 1, 1, x, x, x, x, x, x, x, x, 1, \r\n\t\t\t2, 1, x, x, x, x, x, x, 1, 1, x, x, x, x, x, x, x, x, 1, \r\n\t\t\t1, 1, x, x, x, x, x, x, 1, 1, 1, 1, 1, x, x, x, x, 2, 2, \r\n\t\t\tx, x, x, x, 1, 2, 2, x, x, x, x, x, x, x, x, x, x, x, x, \r\n\t\t\tx, x, x, x, 1, 1, 1, x, x, x, x, x, x, 1, 1, x, x, x, x\r\n\t\t];\r\n\t\tthis.flowerPos = [];\r\n\t\tthis.fencePos = [];\r\n\t\tthis.grassPos = [];\r\n\t\tlet maxRow = this.node.getComponent('utils').rowCount;\r\n\t\tlet maxCol = this.node.getComponent('utils').colCount;\r\n\t\tlet colCount = 0;\r\n\t\tfor (let i = 0; i < this.map.length; i++) {\r\n\t\t\tif (i == colCount + maxCol) {\r\n\t\t\t\tmaxRow -= 1;\r\n\t\t\t\tcolCount += maxCol;\r\n\t\t\t}\r\n\t\t\tif (this.map[i] == 0) {\r\n\t\t\t\tthis.startCell = cc.v2(i + 1 - colCount, maxRow);\r\n\t\t\t} else if (this.map[i] == 1) {\r\n\t\t\t\tthis.fencePos.push(cc.v2(i + 1 - colCount, maxRow));\r\n\t\t\t} else if (this.map[i] == 2) {\r\n\t\t\t\tthis.grassPos.push(cc.v2(i + 1 - colCount, maxRow));\r\n\t\t\t} else if (this.map[i] == 3) {\r\n\t\t\t\tthis.winGoal.setPosition(this.node.getComponent('utils').getCellPos(i + 1 - colCount, maxRow));\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.fencePool = new cc.NodePool();\r\n\t\tfor (let i = 0; i < this.fencePos.length; i++) {\r\n\t\t\tthis.fencePos[i] = this.node.getComponent('utils').createObstacle(this.node, this.fencePos[i], this.fencePrefab, this.fencePool, true);\r\n\t\t}\r\n\t\tthis.grassPool = new cc.NodePool();\r\n\t\tfor (let i = 0; i < this.grassPos.length; i++) {\r\n\t\t\tthis.grassPos[i] = this.node.getComponent('utils').createObstacle(this.node, this.grassPos[i], this.grassPrefab, this.grassPool, true);\r\n\t\t}\r\n\t\tlet startPos = this.node.getComponent('utils').getCellPos(this.startCell.x, this.startCell.y);\r\n\t\tthis.player.node.setPosition(startPos);\r\n\t\tthis.background.score = this.node.getComponent('utils').putObj(this.node, startPos, this.flowerPrefab, this.flowerPool, this.flowerPos, null);\r\n\t\tthis.background.totalScore = this.node.getComponent('utils').totalScore;\r\n\t},\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    update: function (dt) {\r\n\t\tlet pos = this.player.checkMovedInCell();\r\n\t\tif (this.player.checkHitCapturedCell(this.flowerPos) != null) {\r\n\t\t\tcc.director.loadScene('GameOver');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (this.player.checkHitObstacle(this.fencePos) != null) {\r\n\t\t\tcc.director.loadScene('GameOver');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (this.player.checkHitObstacle(this.grassPos) != null) {\r\n\t\t\tcc.director.loadScene('GameOver');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (pos != null) {\r\n\t\t\tthis.background.score = this.node.getComponent('utils').putObj(this.node, pos, this.flowerPrefab, this.flowerPool, this.flowerPos, this.player);\r\n\t\t} \r\n\t},\r\n});\r\n","// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        background: {\r\n            default: null,\r\n\t\t\tstage: 0,\r\n\t\t\tscore: 0,\r\n\t\t\ttotalScore: 0,\r\n            type: cc.Node\r\n        },\r\n\t\tflowerPrefab: {\r\n\t\t\tdefault: null,\r\n            type: cc.Prefab\r\n\t\t},\r\n\t\tfencePrefab: {\r\n\t\t\tdefault: null,\r\n            type: cc.Prefab\r\n\t\t},\r\n\t\tgrassPrefab: {\r\n\t\t\tdefault: null,\r\n            type: cc.Prefab\r\n\t\t},\r\n\t\tsheepPrefab: {\r\n\t\t\tdefault: null,\r\n            type: cc.Prefab\r\n\t\t},\r\n\t\twinGoal: {\r\n\t\t\tdefault: null,\r\n\t\t\ttype: cc.Node\r\n\t\t},\r\n\t\tcharacter: {\r\n\t\t\tdefault: null,\r\n\t\t\ttype: cc.Node\r\n\t\t}\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad: function () {\r\n\t\tcc.game.addPersistRootNode(this.background);\r\n\t\tthis.background.zIndex = -1;\r\n\t\tthis.background.stage = 3;\r\n\t\tthis.player = this.character.getComponent('character');\r\n\t\tthis.character.getComponent('character').game = this;\r\n\t\tlet size = this.node.getComponent('utils').outlinePool.size();\r\n\t\tthis.flowerPool = new cc.NodePool();\r\n\t\tfor (let i = 0; i < size; i++) {\r\n\t\t\tlet flower = cc.instantiate(this.flowerPrefab); // create node instance\r\n\t\t\tthis.flowerPool.put(flower); // populate your pool with put method\r\n\t\t}\r\n\t\tlet x = -1;\r\n\t\tthis.map = [\r\n\t\t\tx, x, x, 1, x, x, x, x, x, 1, x, x, x, x, x, x, x, x, x, \r\n\t\t\tx, 2, x, 1, x, 1, 1, 1, x, 1, x, x, x, x, x, 1, 1, 1, x, \r\n\t\t\tx, x, x, 1, x, 1, 1, 1, x, 1, 1, 1, 1, 1, x, 1, x, x, x, \r\n\t\t\tx, x, x, 1, x, 2, x, x, x, x, x, x, x, 1, x, x, x, 3, x, \r\n\t\t\tx, 1, x, x, 3, x, x, x, x, x, x, x, x, 1, 1, x, x, x, 2, \r\n\t\t\tx, 1, 1, 1, x, x, x, 3, x, 0, x, x, x, 1, x, x, 1, x, x, \r\n\t\t\tx, 1, 1, 1, x, x, 2, x, x, x, x, 1, 1, 1, x, 2, x, x, x, \r\n\t\t\tx, x, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, x, x, 3, x, x, \r\n\t\t\t2, x, 1, 1, x, x, x, x, x, x, x, x, x, x, x, 4, x, x, x, \r\n\t\t\tx, x, 1, 1, x, x, x, x, 3, x, x, x, 1, 1, x, x, x, x, x, \r\n\t\t\tx, 1, 1, x, x, 1, 1, 1, x, x, x, x, 1, 1, x, x, x, x, x, \r\n\t\t\tx, x, x, x, 1, 1, 1, 1, x, x, x, x, 1, 1, x, x, 2, x, x\r\n\t\t];\r\n\t\tthis.flowerPos = [];\r\n\t\tthis.fencePos = [];\r\n\t\tthis.grassPos = [];\r\n\t\tthis.sheepPos = [];\r\n\t\tlet maxRow = this.node.getComponent('utils').rowCount;\r\n\t\tlet maxCol = this.node.getComponent('utils').colCount;\r\n\t\tlet colCount = 0;\r\n\t\tfor (let i = 0; i < this.map.length; i++) {\r\n\t\t\tif (i == colCount + maxCol) {\r\n\t\t\t\tmaxRow -= 1;\r\n\t\t\t\tcolCount += maxCol;\r\n\t\t\t}\r\n\t\t\tif (this.map[i] == 0) {\r\n\t\t\t\tthis.startCell = cc.v2(i + 1 - colCount, maxRow);\r\n\t\t\t} else if (this.map[i] == 1) {\r\n\t\t\t\tthis.fencePos.push(cc.v2(i + 1 - colCount, maxRow));\r\n\t\t\t} else if (this.map[i] == 2) {\r\n\t\t\t\tthis.grassPos.push(cc.v2(i + 1 - colCount, maxRow));\r\n\t\t\t} else if (this.map[i] == 3) {\r\n\t\t\t\tthis.sheepPos.push(cc.v2(i + 1 - colCount, maxRow));\r\n\t\t\t} else if (this.map[i] == 4) {\r\n\t\t\t\tthis.winGoal.setPosition(this.node.getComponent('utils').getCellPos(i + 1 - colCount, maxRow));\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.fencePool = new cc.NodePool();\r\n\t\tfor (let i = 0; i < this.fencePos.length; i++) {\r\n\t\t\tthis.fencePos[i] = this.node.getComponent('utils').createObstacle(this.node, this.fencePos[i], this.fencePrefab, this.fencePool, true);\r\n\t\t}\r\n\t\tthis.grassPool = new cc.NodePool();\r\n\t\tfor (let i = 0; i < this.grassPos.length; i++) {\r\n\t\t\tthis.grassPos[i] = this.node.getComponent('utils').createObstacle(this.node, this.grassPos[i], this.grassPrefab, this.grassPool, true);\r\n\t\t}\r\n\t\tthis.sheepIndexList = [];\r\n\t\tthis.sheepPool = new cc.NodePool();\r\n\t\tfor (let i = 0; i < this.sheepPos.length; i++) {\r\n\t\t\tthis.sheepPos[i] = this.node.getComponent('utils').createObj(this.node, this.sheepPos[i], this.sheepPrefab, this.sheepPool, true);\r\n\t\t\tthis.sheepIndexList.push(this.node.getComponent('utils').objCollection.length - 1);\r\n\t\t}\r\n\t\tlet startPos = this.node.getComponent('utils').getCellPos(this.startCell.x, this.startCell.y);\r\n\t\tthis.player.node.setPosition(startPos);\r\n\t\tthis.background.score = this.node.getComponent('utils').putObj(this.node, startPos, this.flowerPrefab, this.flowerPool, this.flowerPos, null);\r\n\t\tthis.background.totalScore = this.node.getComponent('utils').totalScore;\r\n\t\tthis.hitSheep = false;\r\n\t},\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    update: function (dt) {\r\n\t\tlet pos = this.player.checkMovedInCell();\r\n\t\tif (this.player.checkHitCapturedCell(this.flowerPos) != null) {\r\n\t\t\tcc.director.loadScene('GameOver');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (this.player.checkHitObstacle(this.fencePos) != null) {\r\n\t\t\tcc.director.loadScene('GameOver');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (this.player.checkHitObstacle(this.grassPos) != null) {\r\n\t\t\tcc.director.loadScene('GameOver');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet sheepTmp = this.player.checkHitObstacle(this.sheepPos);\r\n\t\tif (sheepTmp != null) {\r\n\t\t\tthis.sheepPos.splice(sheepTmp, 1);\r\n\t\t\tthis.node.getComponent('utils').objCollection[this.sheepIndexList[sheepTmp]].removeFromParent(true);\r\n\t\t\tthis.hitSheep = true;\r\n\t\t\tthis.sheepIndexList.splice(sheepTmp, 1);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (pos != null) {\r\n\t\t\tif (!this.hitSheep) {\r\n\t\t\t\tthis.background.score = this.node.getComponent('utils').putObj(this.node, pos, this.flowerPrefab, this.flowerPool, this.flowerPos, this.player);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.hitSheep = false;\r\n\t\t}\r\n\t},\r\n});\r\n","// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        background: {\r\n            default: null,\r\n\t\t\tstage: 0,\r\n\t\t\tscore: 0,\r\n\t\t\ttotalScore: 0,\r\n            type: cc.Node\r\n        },\r\n\t\tsnowFlakePrefab: {\r\n\t\t\tdefault: null,\r\n            type: cc.Prefab\r\n\t\t},\r\n\t\tiglooPrefab: {\r\n\t\t\tdefault: null,\r\n            type: cc.Prefab\r\n\t\t},\r\n\t\ticeSkatePrefab: {\r\n\t\t\tdefault: null,\r\n            type: cc.Prefab\r\n\t\t},\r\n\t\tsnowballPrefab: {\r\n\t\t\tdefault: null,\r\n\t\t\torgPos: 0,\r\n            type: cc.Prefab\r\n\t\t},\r\n\t\twinGoal: {\r\n\t\t\tdefault: null,\r\n\t\t\ttype: cc.Node\r\n\t\t},\r\n\t\tcharacter: {\r\n\t\t\tdefault: null,\r\n\t\t\ttype: cc.Node\r\n\t\t}\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad: function () {\r\n\t\tcc.game.addPersistRootNode(this.background);\r\n\t\tthis.background.zIndex = -1;\r\n\t\tthis.background.stage = 4;\r\n\t\tthis.player = this.character.getComponent('character');\r\n\t\tthis.character.getComponent('character').game = this;\r\n\t\tlet size = this.node.getComponent('utils').outlinePool.size();\r\n\t\tthis.snowFlakePool = new cc.NodePool();\r\n\t\tfor (let i = 0; i < size; i++) {\r\n\t\t\tlet snowFlake = cc.instantiate(this.snowFlakePrefab); // create node instance\r\n\t\t\tthis.snowFlakePool.put(snowFlake); // populate your pool with put method\r\n\t\t}\r\n\t\tlet x = -1;\r\n\t\tthis.map = [\r\n\t\t\t0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\r\n\t\t\tx, x, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, x, x, x, x,\r\n\t\t\t1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, x,\r\n\t\t\tx, x, x, x, x, 2, 2, 2, 2, 2, 2, 2, x, x, x, x, x, x, x,\r\n\t\t\tx, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\r\n\t\t\tx, x, 2, 2, 2, x, 2, 2, 2, x, x, 2, 2, 2, x, x, x, x, x,\r\n\t\t\t1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, x,\r\n\t\t\t2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\r\n\t\t\tx, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\r\n\t\t\tx, x, 2, 2, 2, 2, 2, 2, x, x, 2, 2, 2, 2, 2, 2, x, x, 2,\r\n\t\t\t1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2,\r\n\t\t\t3, x, 2, 2, 2, 2, 2, 2, x, x, x, x, 2, 2, 2, 2, 2, 2, 2\r\n\t\t];\r\n\t\tthis.snowFlakePos = [];\r\n\t\tthis.iglooPos = [];\r\n\t\tthis.iceSkatePos = [];\r\n\t\tthis.snowballPos = [\r\n\t\t\tcc.v2(7, 15),\r\n\t\t\tcc.v2(7, 22),\r\n\t\t\tcc.v2(12, 18),\r\n\t\t\tcc.v2(12, 26),\r\n\t\t\tcc.v2(16, 20),\r\n\t\t\tcc.v2(16, 30)\t\r\n\t\t];\r\n\t\tlet maxRow = this.node.getComponent('utils').rowCount;\r\n\t\tlet maxCol = this.node.getComponent('utils').colCount;\r\n\t\tlet colCount = 0;\r\n\t\tfor (let i = 0; i < this.map.length; i++) {\r\n\t\t\tif (i == colCount + maxCol) {\r\n\t\t\t\tmaxRow -= 1;\r\n\t\t\t\tcolCount += maxCol;\r\n\t\t\t}\r\n\t\t\tif (this.map[i] == 0) {\r\n\t\t\t\tthis.startCell = cc.v2(i + 1 - colCount, maxRow);\r\n\t\t\t} else if (this.map[i] == 1) {\r\n\t\t\t\tthis.iglooPos.push(cc.v2(i + 1 - colCount, maxRow));\r\n\t\t\t} else if (this.map[i] == 2) {\r\n\t\t\t\tthis.iceSkatePos.push(cc.v2(i + 1 - colCount, maxRow));\r\n\t\t\t} else if (this.map[i] == 3) {\r\n\t\t\t\tthis.winGoal.setPosition(this.node.getComponent('utils').getCellPos(i + 1 - colCount, maxRow));\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.iglooPool = new cc.NodePool();\r\n\t\tfor (let i = 0; i < this.iglooPos.length; i++) {\r\n\t\t\tthis.iglooPos[i] = this.node.getComponent('utils').createObstacle(this.node, this.iglooPos[i], this.iglooPrefab, this.iglooPool, true);\r\n\t\t}\r\n\t\tthis.iceSkatePool = new cc.NodePool();\r\n\t\tfor (let i = 0; i < this.iceSkatePos.length; i++) {\r\n\t\t\tthis.iceSkatePos[i] = this.node.getComponent('utils').createObstacle(this.node, this.iceSkatePos[i], this.iceSkatePrefab, this.iceSkatePool, true);\r\n\t\t}\r\n\t\tthis.snowballIndexList = [];\r\n\t\tthis.snowballPool = new cc.NodePool();\r\n\t\tfor (let i = 0; i < this.snowballPos.length; i++) {\r\n\t\t\tthis.snowballPos[i] = this.node.getComponent('utils').createObj(this.node, this.snowballPos[i], this.snowballPrefab, this.snowballPool, true);\r\n\t\t\tthis.snowballIndexList.push(this.node.getComponent('utils').objCollection.length - 1);\r\n\t\t\tthis.node.getComponent('utils').objCollection[this.node.getComponent('utils').objCollection.length - 1].orgPos = this.snowballPos[i].y;\r\n\t\t\tthis.node.getComponent('utils').objCollection[this.node.getComponent('utils').objCollection.length - 1].zIndex = 4;\r\n\t\t}\r\n\t\tlet startPos = this.node.getComponent('utils').getCellPos(this.startCell.x, this.startCell.y);\r\n\t\tthis.player.node.setPosition(startPos);\r\n\t\tthis.background.score = this.node.getComponent('utils').putObj(this.node, startPos, this.snowFlakePrefab, this.snowFlakePool, this.snowFlakePos, null);\r\n\t\tthis.background.totalScore = this.node.getComponent('utils').totalScore;\r\n\t\tthis.spdUpAmount = 1;\r\n\t\tthis.spdUp = false;\r\n\t\tthis.snowballSpd = 1;\r\n\t\tthis.maxSnowballPerCol = 2;\r\n\t},\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    update: function (dt) {\r\n\t\tlet pos = this.player.checkMovedInCell();\r\n\t\tif (this.player.checkHitCapturedCell(this.snowFlakePos) != null) {\r\n\t\t\tcc.director.loadScene('GameOver');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (this.player.checkHitObstacle(this.iglooPos) != null) {\r\n\t\t\tcc.director.loadScene('GameOver');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (pos != null) {\r\n\t\t\tif (!this.spdUp) {\r\n\t\t\t\tfor (let i = 0; i < this.iceSkatePos.length; i++) {\r\n\t\t\t\t\tif (this.iceSkatePos[i].x == pos.x && this.iceSkatePos[i].y == pos.y) {\r\n\t\t\t\t\t\tthis.player.moveSpeed += this.spdUpAmount;\r\n\t\t\t\t\t\tthis.spdUp = true;\r\n\t\t\t\t\t\tthis.player.resetCapturedCell();\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tfor (let i = 0; i < this.iceSkatePos.length; i++) {\r\n\t\t\t\t\tif (this.iceSkatePos[i].x == pos.x && this.iceSkatePos[i].y == pos.y) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.player.moveSpeed -= this.spdUpAmount;\r\n\t\t\t\tthis.spdUp = false;\r\n\t\t\t}\r\n\t\t\tthis.background.score = this.node.getComponent('utils').putObj(this.node, pos, this.snowFlakePrefab, this.snowFlakePool, this.snowFlakePos, this.player);\r\n\t\t}\r\n\t\tfor (let i = 0; i < this.snowballIndexList.length; i++) {\r\n\t\t\tlet snowballIndex = this.snowballIndexList[0] + i;\r\n\t\t\tif (this.node.getComponent('utils').checkCollapsed(this.player, this.node.getComponent('utils').objCollection[snowballIndex], this.player.node.width / 2 + this.snowballPrefab.data.width / 2 - 15)) {\r\n\t\t\t\tcc.director.loadScene('GameOver');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif ((i + 1) % this.maxSnowballPerCol == 0 && this.node.getComponent('utils').objCollection[snowballIndex].y < -this.node.height / 2 - this.snowballPrefab.data.height / 2) {\r\n\t\t\t\tfor (let j = 0; j < this.maxSnowballPerCol; j++) {\r\n\t\t\t\t\tthis.node.getComponent('utils').objCollection[snowballIndex - j].y = this.node.getComponent('utils').objCollection[snowballIndex - j].orgPos;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.node.getComponent('utils').objCollection[snowballIndex].y -= this.snowballSpd;\r\n\t\t}\r\n\t},\r\n});\r\n","// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        background: {\r\n            default: null,\r\n\t\t\tstage: 0,\r\n\t\t\tscore: 0,\r\n\t\t\ttotalScore: 0,\r\n            type: cc.Node\r\n        },\r\n\t\tsnowFlakePrefab: {\r\n\t\t\tdefault: null,\r\n            type: cc.Prefab\r\n\t\t},\r\n\t\tiglooPrefab: {\r\n\t\t\tdefault: null,\r\n            type: cc.Prefab\r\n\t\t},\r\n\t\ticeSkatePrefab: {\r\n\t\t\tdefault: null,\r\n            type: cc.Prefab\r\n\t\t},\r\n\t\tsnowballPrefab: {\r\n\t\t\tdefault: null,\r\n\t\t\torgPos: 0,\r\n\t\t\tdir: 1,\r\n            type: cc.Prefab\r\n\t\t},\r\n\t\twinGoal: {\r\n\t\t\tdefault: null,\r\n\t\t\ttype: cc.Node\r\n\t\t},\r\n\t\tcharacter: {\r\n\t\t\tdefault: null,\r\n\t\t\ttype: cc.Node\r\n\t\t}\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad: function () {\r\n\t\tcc.game.addPersistRootNode(this.background);\r\n\t\tthis.background.zIndex = -1;\r\n\t\tthis.background.stage = 5;\r\n\t\tthis.player = this.character.getComponent('character');\r\n\t\tthis.character.getComponent('character').game = this;\r\n\t\tlet size = this.node.getComponent('utils').outlinePool.size();\r\n\t\tthis.snowFlakePool = new cc.NodePool();\r\n\t\tfor (let i = 0; i < size; i++) {\r\n\t\t\tlet snowFlake = cc.instantiate(this.snowFlakePrefab); // create node instance\r\n\t\t\tthis.snowFlakePool.put(snowFlake); // populate your pool with put method\r\n\t\t}\r\n\t\tlet x = -1;\r\n\t\tthis.map = [\r\n\t\t\t0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, \r\n\t\t\tx, x, x, 2, x, x, x, 2, x, x, x, 2, x, x, x, 2, x, x, x, \r\n\t\t\t1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, x, \r\n\t\t\tx, 2, 2, 2, x, 2, x, 2, x, 2, x, 2, x, 2, x, 2, x, 2, x, \r\n\t\t\tx, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, \r\n\t\t\tx, 2, x, 2, x, 2, x, 2, x, 2, x, 2, x, 2, x, 2, x, 2, x, \r\n\t\t\t1, 1, 1, 2, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, x, \r\n\t\t\tx, 2, x, 2, x, 2, x, 2, x, 2, x, 2, x, 2, x, 2, x, 2, x, \r\n\t\t\tx, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, \r\n\t\t\tx, 2, x, 2, x, 2, x, 2, x, 2, x, 2, x, 2, x, 2, x, 2, 2, \r\n\t\t\t1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2,\r\n\t\t\t3, x, x, 2, x, x, x, 2, x, x, x, 2, x, x, x, 2, x, x, 2\r\n\t\t];\r\n\t\tthis.snowFlakePos = [];\r\n\t\tthis.iglooPos = [];\r\n\t\tthis.iceSkatePos = [];\r\n\t\tthis.snowballPos = [\r\n\t\t\tcc.v2(-5, 11),\r\n\t\t\tcc.v2(25, 9),\r\n\t\t\tcc.v2(-5, 7),\r\n\t\t\tcc.v2(25, 5),\r\n\t\t\tcc.v2(-5, 3),\r\n\t\t\tcc.v2(25, 1)\t\r\n\t\t];\r\n\t\tlet maxRow = this.node.getComponent('utils').rowCount;\r\n\t\tlet maxCol = this.node.getComponent('utils').colCount;\r\n\t\tlet colCount = 0;\r\n\t\tfor (let i = 0; i < this.map.length; i++) {\r\n\t\t\tif (i == colCount + maxCol) {\r\n\t\t\t\tmaxRow -= 1;\r\n\t\t\t\tcolCount += maxCol;\r\n\t\t\t}\r\n\t\t\tif (this.map[i] == 0) {\r\n\t\t\t\tthis.startCell = cc.v2(i + 1 - colCount, maxRow);\r\n\t\t\t} else if (this.map[i] == 1) {\r\n\t\t\t\tthis.iglooPos.push(cc.v2(i + 1 - colCount, maxRow));\r\n\t\t\t} else if (this.map[i] == 2) {\r\n\t\t\t\tthis.iceSkatePos.push(cc.v2(i + 1 - colCount, maxRow));\r\n\t\t\t} else if (this.map[i] == 3) {\r\n\t\t\t\tthis.winGoal.setPosition(this.node.getComponent('utils').getCellPos(i + 1 - colCount, maxRow));\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.iglooPool = new cc.NodePool();\r\n\t\tfor (let i = 0; i < this.iglooPos.length; i++) {\r\n\t\t\tthis.iglooPos[i] = this.node.getComponent('utils').createObstacle(this.node, this.iglooPos[i], this.iglooPrefab, this.iglooPool, true);\r\n\t\t}\r\n\t\tthis.iceSkatePool = new cc.NodePool();\r\n\t\tfor (let i = 0; i < this.iceSkatePos.length; i++) {\r\n\t\t\tthis.iceSkatePos[i] = this.node.getComponent('utils').createObstacle(this.node, this.iceSkatePos[i], this.iceSkatePrefab, this.iceSkatePool, true);\r\n\t\t}\r\n\t\tthis.snowballIndexList = [];\r\n\t\tthis.snowballPool = new cc.NodePool();\r\n\t\tlet dirTmp = 1;\r\n\t\tfor (let i = 0; i < this.snowballPos.length; i++) {\r\n\t\t\tthis.snowballPos[i] = this.node.getComponent('utils').createObj(this.node, this.snowballPos[i], this.snowballPrefab, this.snowballPool, true);\r\n\t\t\tthis.snowballIndexList.push(this.node.getComponent('utils').objCollection.length - 1);\r\n\t\t\tthis.node.getComponent('utils').objCollection[this.node.getComponent('utils').objCollection.length - 1].orgPos = this.snowballPos[i].x;\r\n\t\t\tthis.node.getComponent('utils').objCollection[this.node.getComponent('utils').objCollection.length - 1].dir = dirTmp;\r\n\t\t\tthis.node.getComponent('utils').objCollection[this.node.getComponent('utils').objCollection.length - 1].zIndex = 4;\r\n\t\t\tdirTmp *= -1;\r\n\t\t}\r\n\t\tlet startPos = this.node.getComponent('utils').getCellPos(this.startCell.x, this.startCell.y);\r\n\t\tthis.player.node.setPosition(startPos);\r\n\t\tthis.background.score = this.node.getComponent('utils').putObj(this.node, startPos, this.snowFlakePrefab, this.snowFlakePool, this.snowFlakePos, null);\r\n\t\tthis.background.totalScore = this.node.getComponent('utils').totalScore;\r\n\t\tthis.spdUpAmount = 1;\r\n\t\tthis.spdUp = false;\r\n\t\tthis.snowballSpd = 2.5;\r\n\t},\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    update: function (dt) {\r\n\t\tlet pos = this.player.checkMovedInCell();\r\n\t\tif (this.player.checkHitCapturedCell(this.snowFlakePos) != null) {\r\n\t\t\tcc.director.loadScene('GameOver');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (this.player.checkHitObstacle(this.iglooPos) != null) {\r\n\t\t\tcc.director.loadScene('GameOver');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (pos != null) {\r\n\t\t\tif (!this.spdUp) {\r\n\t\t\t\tfor (let i = 0; i < this.iceSkatePos.length; i++) {\r\n\t\t\t\t\tif (this.iceSkatePos[i].x == pos.x && this.iceSkatePos[i].y == pos.y) {\r\n\t\t\t\t\t\tthis.player.moveSpeed += this.spdUpAmount;\r\n\t\t\t\t\t\tthis.spdUp = true;\r\n\t\t\t\t\t\tthis.player.resetCapturedCell();\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tfor (let i = 0; i < this.iceSkatePos.length; i++) {\r\n\t\t\t\t\tif (this.iceSkatePos[i].x == pos.x && this.iceSkatePos[i].y == pos.y) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.player.moveSpeed -= this.spdUpAmount;\r\n\t\t\t\tthis.spdUp = false;\r\n\t\t\t}\r\n\t\t\tthis.background.score = this.node.getComponent('utils').putObj(this.node, pos, this.snowFlakePrefab, this.snowFlakePool, this.snowFlakePos, this.player);\r\n\t\t}\r\n\t\tfor (let i = 0; i < this.snowballIndexList.length; i++) {\r\n\t\t\tlet snowballIndex = this.snowballIndexList[0] + i;\r\n\t\t\tif (this.node.getComponent('utils').checkCollapsed(this.player, this.node.getComponent('utils').objCollection[snowballIndex], this.player.node.width / 2 + this.snowballPrefab.data.width / 2 - 15)) {\r\n\t\t\t\tcc.director.loadScene('GameOver');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (this.node.getComponent('utils').objCollection[snowballIndex].dir == -1) {\r\n\t\t\t\tif (this.node.getComponent('utils').objCollection[snowballIndex].x < -this.node.width / 2 - this.snowballPrefab.data.width / 2) {\r\n\t\t\t\t\tthis.node.getComponent('utils').objCollection[snowballIndex].x = this.node.getComponent('utils').objCollection[snowballIndex].orgPos;\r\n\t\t\t\t}\r\n\t\t\t} else if (this.node.getComponent('utils').objCollection[snowballIndex].x > this.node.width / 2 + this.snowballPrefab.data.width / 2) {\r\n\t\t\t\t\tthis.node.getComponent('utils').objCollection[snowballIndex].x = this.node.getComponent('utils').objCollection[snowballIndex].orgPos;\r\n\t\t\t}\r\n\t\t\tthis.node.getComponent('utils').objCollection[snowballIndex].x += this.snowballSpd * this.node.getComponent('utils').objCollection[snowballIndex].dir;\r\n\t\t}\r\n\t},\r\n});\r\n","// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        background: {\r\n            default: null,\r\n\t\t\tstage: 0,\r\n\t\t\tscore: 0,\r\n\t\t\ttotalScore: 0,\r\n            type: cc.Node\r\n        },\r\n\t\tsnowFlakePrefab: {\r\n\t\t\tdefault: null,\r\n            type: cc.Prefab\r\n\t\t},\r\n\t\tiglooPrefab: {\r\n\t\t\tdefault: null,\r\n            type: cc.Prefab\r\n\t\t},\r\n\t\ticeSkatePrefab: {\r\n\t\t\tdefault: null,\r\n            type: cc.Prefab\r\n\t\t},\r\n\t\tsnowballPrefab: {\r\n\t\t\tdefault: null,\r\n\t\t\torgPos: 0,\r\n\t\t\tdir: 1,\r\n            type: cc.Prefab\r\n\t\t},\r\n\t\twinGoal: {\r\n\t\t\tdefault: null,\r\n\t\t\ttype: cc.Node\r\n\t\t},\r\n\t\tcharacter: {\r\n\t\t\tdefault: null,\r\n\t\t\ttype: cc.Node\r\n\t\t}\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad: function () {\r\n\t\tcc.game.addPersistRootNode(this.background);\r\n\t\tthis.background.zIndex = -1;\r\n\t\tthis.background.stage = 6;\r\n\t\tthis.player = this.character.getComponent('character');\r\n\t\tthis.character.getComponent('character').game = this;\r\n\t\tlet size = this.node.getComponent('utils').outlinePool.size();\r\n\t\tthis.snowFlakePool = new cc.NodePool();\r\n\t\tfor (let i = 0; i < size; i++) {\r\n\t\t\tlet snowFlake = cc.instantiate(this.snowFlakePrefab); // create node instance\r\n\t\t\tthis.snowFlakePool.put(snowFlake); // populate your pool with put method\r\n\t\t}\r\n\t\tlet x = -1;\r\n\t\tthis.map = [\r\n\t\t\t0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, \r\n\t\t\tx, 2, 2, 2, 2, x, x, x, x, x, x, x, x, 2, 2, 1, x, x, x, \r\n\t\t\t1, x, 1, 1, x, 1, x, 1, 1, 2, 1, x, 1, 1, 2, 1, x, 1, x, \r\n\t\t\t1, x, 1, 1, x, 1, 2, 1, 1, 2, 1, 2, 1, 1, 2, 1, x, 1, x, \r\n\t\t\t1, x, x, x, x, 1, 2, 2, 2, 2, x, 2, 2, 2, 2, 2, 2, x, x,\t\t\r\n\t\t\t1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, \r\n\t\t\t1, x, 1, 1, 1, x, 1, 1, 1, x, 1, 1, 1, x, 1, 1, 2, x, x, \r\n\t\t\t1, 2, x, 2, x, 2, x, 2, x, 2, x, 2, x, 2, x, 2, x, 2, x, \r\n\t\t\t1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, \r\n\t\t\tx, x, 1, x, 1, x, 1, x, 1, x, 1, x, 1, x, 1, x, 1, x, 1, \r\n\t\t\tx, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2,\r\n\t\t\tx, x, 2, 2, x, x, x, 2, 2, x, x, x, 2, 2, x, x, x, x, 3\r\n\t\t];\r\n\t\tthis.snowFlakePos = [];\r\n\t\tthis.iglooPos = [];\r\n\t\tthis.iceSkatePos = [];\r\n\t\tthis.snowballPos_1 = [\r\n\t\t\tcc.v2(3.5, 15),\r\n\t\t\tcc.v2(3.5, 22),\r\n\t\t\tcc.v2(3.5, 29),\r\n\t\t\tcc.v2(8.5, 15),\r\n\t\t\tcc.v2(8.5, 22),\r\n\t\t\tcc.v2(8.5, 29),\r\n\t\t\tcc.v2(13.5, 15),\r\n\t\t\tcc.v2(13.5, 22),\r\n\t\t\tcc.v2(13.5, 29),\r\n\t\t\tcc.v2(18.5, 15),\r\n\t\t\tcc.v2(18.5, 22),\r\n\t\t\tcc.v2(18.5, 29)\r\n\t\t];\r\n\t\tthis.snowballPos_2 = [\r\n\t\t\tcc.v2(22, 3)\r\n\t\t]\r\n\t\tlet maxRow = this.node.getComponent('utils').rowCount;\r\n\t\tlet maxCol = this.node.getComponent('utils').colCount;\r\n\t\tlet colCount = 0;\r\n\t\tfor (let i = 0; i < this.map.length; i++) {\r\n\t\t\tif (i == colCount + maxCol) {\r\n\t\t\t\tmaxRow -= 1;\r\n\t\t\t\tcolCount += maxCol;\r\n\t\t\t}\r\n\t\t\tif (this.map[i] == 0) {\r\n\t\t\t\tthis.startCell = cc.v2(i + 1 - colCount, maxRow);\r\n\t\t\t} else if (this.map[i] == 1) {\r\n\t\t\t\tthis.iglooPos.push(cc.v2(i + 1 - colCount, maxRow));\r\n\t\t\t} else if (this.map[i] == 2) {\r\n\t\t\t\tthis.iceSkatePos.push(cc.v2(i + 1 - colCount, maxRow));\r\n\t\t\t} else if (this.map[i] == 3) {\r\n\t\t\t\tthis.winGoal.setPosition(this.node.getComponent('utils').getCellPos(i + 1 - colCount, maxRow));\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.iglooPool = new cc.NodePool();\r\n\t\tfor (let i = 0; i < this.iglooPos.length; i++) {\r\n\t\t\tthis.iglooPos[i] = this.node.getComponent('utils').createObstacle(this.node, this.iglooPos[i], this.iglooPrefab, this.iglooPool, true);\r\n\t\t}\r\n\t\tthis.iceSkatePool = new cc.NodePool();\r\n\t\tfor (let i = 0; i < this.iceSkatePos.length; i++) {\r\n\t\t\tthis.iceSkatePos[i] = this.node.getComponent('utils').createObstacle(this.node, this.iceSkatePos[i], this.iceSkatePrefab, this.iceSkatePool, true);\r\n\t\t}\r\n\t\tthis.snowballIndexList_1 = [];\r\n\t\tthis.snowballPool = new cc.NodePool();\r\n\t\tfor (let i = 0; i < this.snowballPos_1.length; i++) {\r\n\t\t\tthis.snowballPos_1[i] = this.node.getComponent('utils').createObj(this.node, this.snowballPos_1[i], this.snowballPrefab, this.snowballPool, true);\r\n\t\t\tthis.snowballIndexList_1.push(this.node.getComponent('utils').objCollection.length - 1);\r\n\t\t\tthis.node.getComponent('utils').objCollection[this.node.getComponent('utils').objCollection.length - 1].orgPos = this.snowballPos_1[i].y;\r\n\t\t\tthis.node.getComponent('utils').objCollection[this.node.getComponent('utils').objCollection.length - 1].zIndex = 4;\r\n\t\t}\r\n\t\tthis.snowballIndexList_2 = [];\r\n\t\tlet dirTmp = -1;\r\n\t\tfor (let i = 0; i < this.snowballPos_2.length; i++) {\r\n\t\t\tthis.snowballPos_2[i] = this.node.getComponent('utils').createObj(this.node, this.snowballPos_2[i], this.snowballPrefab, this.snowballPool, true);\r\n\t\t\tthis.snowballIndexList_2.push(this.node.getComponent('utils').objCollection.length - 1);\r\n\t\t\tthis.node.getComponent('utils').objCollection[this.node.getComponent('utils').objCollection.length - 1].orgPos = this.snowballPos_2[i].x;\r\n\t\t\tthis.node.getComponent('utils').objCollection[this.node.getComponent('utils').objCollection.length - 1].dir = dirTmp;\r\n\t\t\tthis.node.getComponent('utils').objCollection[this.node.getComponent('utils').objCollection.length - 1].zIndex = 4;\r\n\t\t}\r\n\t\tlet startPos = this.node.getComponent('utils').getCellPos(this.startCell.x, this.startCell.y);\r\n\t\tthis.player.node.setPosition(startPos);\r\n\t\tthis.background.score = this.node.getComponent('utils').putObj(this.node, startPos, this.snowFlakePrefab, this.snowFlakePool, this.snowFlakePos, null);\r\n\t\tthis.background.totalScore = this.node.getComponent('utils').totalScore;\r\n\t\tthis.spdUpAmount = 1;\r\n\t\tthis.spdUp = false;\r\n\t\tthis.snowballSpd = 2.5;\r\n\t\tthis.maxSnowballPerCol = 3;\r\n\t},\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    update: function (dt) {\r\n\t\tlet pos = this.player.checkMovedInCell();\r\n\t\tif (this.player.checkHitCapturedCell(this.snowFlakePos) != null) {\r\n\t\t\tcc.director.loadScene('GameOver');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (this.player.checkHitObstacle(this.iglooPos) != null) {\r\n\t\t\tcc.director.loadScene('GameOver');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (pos != null) {\r\n\t\t\tif (!this.spdUp) {\r\n\t\t\t\tfor (let i = 0; i < this.iceSkatePos.length; i++) {\r\n\t\t\t\t\tif (this.iceSkatePos[i].x == pos.x && this.iceSkatePos[i].y == pos.y) {\r\n\t\t\t\t\t\tthis.player.moveSpeed += this.spdUpAmount;\r\n\t\t\t\t\t\tthis.spdUp = true;\r\n\t\t\t\t\t\tthis.player.resetCapturedCell();\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tfor (let i = 0; i < this.iceSkatePos.length; i++) {\r\n\t\t\t\t\tif (this.iceSkatePos[i].x == pos.x && this.iceSkatePos[i].y == pos.y) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.player.moveSpeed -= this.spdUpAmount;\r\n\t\t\t\tthis.spdUp = false;\r\n\t\t\t}\r\n\t\t\tthis.background.score = this.node.getComponent('utils').putObj(this.node, pos, this.snowFlakePrefab, this.snowFlakePool, this.snowFlakePos, this.player);\r\n\t\t}\r\n\t\tfor (let i = 0; i < this.snowballIndexList_1.length; i++) {\r\n\t\t\tlet snowballIndex = this.snowballIndexList_1[0] + i;\r\n\t\t\tif (this.node.getComponent('utils').checkCollapsed(this.player, this.node.getComponent('utils').objCollection[snowballIndex], this.player.node.width / 2 + this.snowballPrefab.data.width / 2 - 15)) {\r\n\t\t\t\tcc.director.loadScene('GameOver');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif ((i + 1) % this.maxSnowballPerCol == 0 && this.node.getComponent('utils').objCollection[snowballIndex].y < -this.node.height / 2 - this.snowballPrefab.data.height / 2) {\r\n\t\t\t\tfor (let j = 0; j < this.maxSnowballPerCol; j++) {\r\n\t\t\t\t\tthis.node.getComponent('utils').objCollection[snowballIndex - j].y = this.node.getComponent('utils').objCollection[snowballIndex - j].orgPos;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.node.getComponent('utils').objCollection[snowballIndex].y -= this.snowballSpd;\r\n\t\t}\r\n\t\tfor (let i = 0; i < this.snowballIndexList_2.length; i++) {\r\n\t\t\tlet snowballIndex = this.snowballIndexList_2[0] + i;\r\n\t\t\tif (this.node.getComponent('utils').checkCollapsed(this.player, this.node.getComponent('utils').objCollection[snowballIndex], this.player.node.width / 2 + this.snowballPrefab.data.width / 2 - 15)) {\r\n\t\t\t\tcc.director.loadScene('GameOver');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (this.node.getComponent('utils').objCollection[snowballIndex].dir == -1) {\r\n\t\t\t\tif (this.node.getComponent('utils').objCollection[snowballIndex].x < -this.node.width / 2 - this.snowballPrefab.data.width / 2) {\r\n\t\t\t\t\tthis.node.getComponent('utils').objCollection[snowballIndex].x = this.node.getComponent('utils').objCollection[snowballIndex].orgPos;\r\n\t\t\t\t}\r\n\t\t\t} else if (this.node.getComponent('utils').objCollection[snowballIndex].x > this.node.width / 2 + this.snowballPrefab.data.width / 2) {\r\n\t\t\t\t\tthis.node.getComponent('utils').objCollection[snowballIndex].x = this.node.getComponent('utils').objCollection[snowballIndex].orgPos;\r\n\t\t\t}\r\n\t\t\tthis.node.getComponent('utils').objCollection[snowballIndex].x += (this.snowballSpd + 1) * this.node.getComponent('utils').objCollection[snowballIndex].dir;\r\n\t\t}\r\n\t},\r\n});\r\n","// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad: function () {\r\n\t\tlet backgroundNode = cc.find(\"background\");\r\n\t\tthis.node.on('touchstart', function(){\r\n\t\t\tcc.director.loadScene('Stage_0' + backgroundNode.stage);\r\n\t\t\tcc.game.removePersistRootNode(backgroundNode);\r\n\t\t}, this.node);\r\n\r\n\t\tthis.node.on('touchmove', function (event) {\r\n\r\n\t\t\tvar delta = event.touch.getDelta();\r\n\r\n\t\t\tthis.x += delta.x;\r\n\t\t\tthis.y += delta.y;\r\n\r\n\t\t}, this.node);\r\n\r\n\t\tthis.node.on('touchend', function () {\r\n\t\t}, this.node);\r\n\t},\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n","// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        tutorial_0: {\r\n\t\t\tdefault: null,\r\n\t\t\tisActive: true,\r\n            type: cc.Node\r\n\t\t},\r\n\t\ttutorial_1: {\r\n\t\t\tdefault: null,\r\n\t\t\tisActive: false,\r\n            type: cc.Node\r\n\t\t}\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad: function () {\r\n\t\tthis.tutorial_1.active = false;\r\n\t\tlet here = this;\r\n\t\tlet endTut = false;\r\n\t\tthis.node.on('touchstart', function(){\r\n\t\t\t//here.tutorial_0.active = here.tutorial_0.isActive = !here.tutorial_0.isActive;\r\n\t\t\tif (!endTut) {\r\n\t\t\t\there.tutorial_1.active = here.tutorial_1.isActive = !here.tutorial_1.isActive;\r\n\t\t\t\tendTut = true;\r\n\t\t\t} else {\r\n\t\t\t\tcc.director.loadScene('Stage_01');\r\n\t\t\t}\r\n\t\t}, this.node);\r\n\r\n\t\tthis.node.on('touchmove', function (event) {\r\n\r\n\t\t\tvar delta = event.touch.getDelta();\r\n\r\n\t\t\tthis.x += delta.x;\r\n\t\t\tthis.y += delta.y;\r\n\r\n\t\t}, this.node);\r\n\r\n\t\tthis.node.on('touchend', function () {\r\n\t\t}, this.node);\r\n\t},\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n","/*\r\n * This script is automatically generated by Cocos Creator and is only compatible with projects prior to v2.1.0.\r\n * You do not need to manually add this script in any other project.\r\n * If you don't use cc.Toggle in your project, you can delete this script directly.\r\n * If your project is hosted in VCS such as git, submit this script together.\r\n *\r\n * 此脚本由 Cocos Creator 自动生成，仅用于兼容 v2.1.0 之前版本的工程，\r\n * 你无需在任何其它项目中手动添加此脚本。\r\n * 如果你的项目中没用到 Toggle，可直接删除该脚本。\r\n * 如果你的项目有托管于 git 等版本库，请将此脚本一并上传。\r\n */\r\n\r\nif (cc.Toggle) {\r\n    // Whether the 'toggle' and 'checkEvents' events are fired when 'toggle.check() / toggle.uncheck()' is called in the code\r\n    // 在代码中调用 'toggle.check() / toggle.uncheck()' 时是否触发 'toggle' 与 'checkEvents' 事件\r\n    cc.Toggle._triggerEventInScript_check = true;\r\n}\r\n","// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n\t\toutlinePrefab: {\r\n\t\t\tdefault: null,\r\n            type: cc.Prefab\r\n\t\t},\r\n\t\tscoreDisplay: {\r\n            default: null,\r\n            type: cc.Label\r\n        }\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad: function () {\r\n\t\tthis.boundLeft = -this.node.width / 2;\r\n\t\tthis.boundBot = -this.node.height / 2;\r\n\t\tthis.gapX = this.node.width % this.outlinePrefab.data.width / 2;\r\n\t\tthis.gapY = this.node.height % this.outlinePrefab.data.height / 2;\r\n\t\tthis.outlinePool = new cc.NodePool();\r\n\t\tthis.colCount = Math.floor(this.node.width / this.outlinePrefab.data.width);\r\n\t\tthis.rowCount = Math.floor(this.node.height / this.outlinePrefab.data.height);\r\n\t\tthis.totalScore = this.rowCount * this.colCount;\r\n\t\tfor (let i = 0; i < this.totalScore; i++) {\r\n\t\t\tlet outline = cc.instantiate(this.outlinePrefab); // create node instance\r\n\t\t\tthis.outlinePool.put(outline); // populate your pool with put method\r\n\t\t\tthis.createOutline(this.node, i);\r\n\t\t}\r\n\t\tthis.score = 0;\r\n\t\tthis.scoreDisplay.zIndex = 3;\r\n\t\tthis.objCollection = [];\r\n\t},\r\n\t\r\n\tgetCellPos(col, row) {\r\n\t\treturn cc.v2(this.gapX + this.boundLeft + this.outlinePrefab.data.width / 2 + this.outlinePrefab.data.width * (col - 1),  this.gapY + this.boundBot + this.outlinePrefab.data.height / 2 + this.outlinePrefab.data.height * (row - 1));\r\n\t},\r\n\t\r\n\tcreateOutline: function (parentNode, order) {\r\n\t\tlet outline = null;\r\n\t\tif (this.outlinePool.size() > 0) { // use size method to check if there're nodes available in the pool\r\n\t\t\toutline = this.outlinePool.get();\r\n\t\t} else { // if not enough node in the pool, we call cc.instantiate to create node\r\n\t\t\toutline = cc.instantiate(this.outlinePrefab);\r\n\t\t}\r\n\t\toutline.parent = parentNode; // add new outline node to the node tree\r\n\t\t//outline.getComponent('outline').init(); //initialize outline\r\n\t\tlet row = Math.floor(order / this.colCount);\r\n\t\tlet col = order;\r\n\t\tif (order > this.colCount - 1) {\r\n\t\t\tcol = order - this.colCount * row;\r\n\t\t}\r\n\t\toutline.setPosition(this.getCellPos(col + 1, row + 1));\r\n\t\t//(cc.v2(this.gapX + this.boundLeft + this.outlinePrefab.data.width / 2 + this.outlinePrefab.data.width * col, this.gapY + this.boundBot + this.outlinePrefab.data.height / 2 + this.outlinePrefab.data.height * row));\r\n\t},\r\n\r\n\tcreateObj: function (parentNode, pos, objPrefab, pool, getCellPos) {\r\n\t\tlet obj = cc.instantiate(objPrefab); // create node instance\r\n\t\tpool.put(obj); // populate your pool with put method\r\n\t\tif (getCellPos) {\r\n\t\t\tpos = this.getCellPos(pos.x, pos.y);\r\n\t\t}\r\n\t\t//let obj = null;\r\n\t\tif (pool.size() > 0) { // use size method to check if there're nodes available in the pool\r\n\t\t\tobj = pool.get();\r\n\t\t} else { // if not enough node in the pool, we call cc.instantiate to create node\r\n\t\t\tobj = cc.instantiate(objPrefab);\r\n\t\t}\r\n\t\tobj.parent = parentNode;\r\n\t\tobj.setPosition(pos);\r\n\t\tobj.zIndex = 1;\r\n\t\tthis.objCollection.push(obj);\r\n\t\treturn pos;\r\n\t},\r\n\t\r\n\tcreateObstacle: function (parentNode, pos, objPrefab, pool, getCellPos) {\r\n\t\tthis.totalScore -= 1;\r\n\t\treturn this.createObj(parentNode, pos, objPrefab, pool, getCellPos);\t\t\r\n\t},\r\n\t\r\n\tputObj: function (parentNode, pos, objPrefab, pool, objPosArray, character) {\r\n\t\tthis.createObj(parentNode, pos, objPrefab, pool, false);\r\n\t\tobjPosArray.push(cc.v2(pos.x, pos.y));\r\n\t\tthis.score += 1;\r\n\t\tthis.scoreDisplay.string = 'Score: ' + this.score + '/' + this.totalScore;\r\n\t\tif (character != null) {\r\n\t\t\tcharacter.updateCapturedCell();\r\n\t\t}\r\n\t\treturn this.score;\r\n\t},\r\n\t\r\n\tcheckCollapsed: function (obj_1, obj_2, checkDist) {\r\n\t\tlet dis = obj_1.node.position.sub(obj_2.getPosition()).mag();\r\n\t\treturn dis < checkDist;\r\n\t},\r\n\t\r\n    start () {\r\n\t\t\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n","// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n\t\tscoreDisplay: {\r\n            default: null,\r\n            type: cc.Label\r\n        }\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad: function () {\r\n\t\tlet backgroundNode = cc.find(\"background\");\r\n\t\tthis.scoreDisplay.string = 'SCORE: ' + backgroundNode.score + '/' + backgroundNode.totalScore;\r\n\t},\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n"],"file":"index.js"}